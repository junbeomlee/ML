1957 classification engines. 1 Introduction and Previous Work Classifier combination has become a common approach to improve classification performance. Various combination methods have been proposed (). Classifiers can be categorized based on their output information levels () into three types: (i) those that return a unique class label indicating the most probable class to which the input 
1028 Databases, Bipartite Graph 1 Introduction The World Wide Web was originally built for human consumption, and although everything on it is machine-readable, the data is not machine-understandable . The Resource Description Framework, RDF , is a language to express metadata about information resources on the Web proposed by the WWW Consortium (W3C). It is intended that this information 
1102 in . This single-view approach can be extended to 3D by considering multiple simultaneous views of features. Shape models in several views can be separately estimated to match object appearance ; this approach was able to learn a mapping between the low-dimensional shape parameters in each view. With multi-view contours from cameras at known locations, a visual hull can be recovered to 
2249 the F&D-approach by utilizing very recent machine learning techniques and a larger number of EEG-electrodes. First of all, we could increase the transfer rate by using Support Vector Machines (SVM) for classification. Inspired by a recent approach to learning of discriminative densities we utilized the values of the SVM classification function as a measure of confidence which we 
2249 of one target symbol. For the P300-detection, we utilized two model-based methods which had been proposed by F&D, and one completely data-driven method based on Support Vector Machines (SVMs) . For training of the classifiers, we built up a sets of epochs containing an equal number of positive and negative examples, i.e. epochs with and without a P300 component. 1 OL denotes the position 
2305 flow when in fact this neighbor is an alternate identity of the adversary. 7.3. Geographic routing Geographic and energy aware routing (GEAR) and greedy perimeter stateless routing (GPSR) leverage nodesÕ positions and explicit geographic packet destinations to efficiently disseminate queries and route replies. GPSR uses greedy forwarding at each hop, routing each packet to the 
483 using LEACH to form hierarchical clusters. In this case, it is in the adversaryÕs best interest to use the above techniques against the top-most layer of clustering. Other clustering protocols and protocols optimizing or extending LEACH such as TEEN and PEGASIS are also susceptible to attacks similar to those described above. 7.6. Rumor routing Rumor routing is a 
1069 that represent a current state of the art of these objects. I. INTRODUCTION Probabilistic finite-state machines such as probabilistic finite-state automata (PFA) , hidden Markov models (HMMs) , , stochastic regular grammars , Markov chains , n-grams , , probabilistic suffix trees , deterministic stochastic or probabilistic automata (DPFA) , weighted automata are 
1069 also terms and trees. Their successes in a wide amount of fields ranging from computational linguistics to pattern recognition , and including language modeling in speech recognition , , , bioinformatics , music modeling , machine translation , , circuit testing or time series analysis make these objects very valuable indeed. But as more 
1939 energy_static = cycles * energy_static_per_cycle The underlined terms are those we obtain through measurements or simulations. We compute cache_hits and cache_misses by running SimpleScalar simulations for each cache configuration. We compute energy_hit of each cache configuration through simulation of circuits extracted from our layout using Cadence (which happened to reasonably 
1939 compensated for by the reduction in time and power that would have been caused by misses. Figure 2(a) shows the miss rate for two MediaBench benchmarks, epic and mpeg2, measured using SimpleScalar and configured with an 8 Kbyte data cache having one, two or four-way set-associativity, with a line size of 32 bytes. Notice that the hit rates for both are better with two ways than with one way, 
688 tool: the Java Applet Correctness Kit (or JACK). This tool, already briefly described in , is a formal tool that allows one to prove properties on Java programs using the Java Modeling Language (JML). Its application domain is, at the moment, smart card applets, but one can consider that it can be useful in many development contexts. It generates proof obligations allowing to prove that 
688 been collected. Section 6 presents research perspectives and Section 7 concludes. 2 Java Modeling Language This section briefly presents JML and the tools that have been developed around it. JML is a language that allows one to specify Java classes by formally expressing properties and requirements on those classes and their methods. Some keywords and logical constructions have been added 
499 we also address this issue at the subproblem level by adopting a symbolic representation. The logic synthesis and model checking communities have been using Ordered Binary Decision Diagrams (OBDD) for compact state space encoding. An OBDD-based model checking technique has proven particularly successful in dealing with the state explosion problem . Recognizing the similarities between 
175 and set attribute. We assume that the percentage of read, write, get attribute and set attribute operations are 67.1, 20.8, 0.3¤ 11.8 and respectively (loosely based on SPECsfs 3.0). Recent studies suggest that the reference probability for Web documents requested by a client does not follow Zipfs Law precisely, but instead follows a Zipf-like distribution with the exponent varying from 
175 frequencies, then the reference probability for a document with ranksis propor ¨§ ?¦¥ tional to . Note ? ? ? that for , the request distribution strictly follows Zipfs law. However, as shown in , the distribution of Web requests follows a Zipf-like distri¦ ? ©???? ? ??¦ ? ? ? bution, with . In our experiments, a client requests objects according to a Zipf-like distribution, where the 
940 slow convergence and high bandwidth utilization , . 0-7803-8356-7/04/$20.00 (C) 2004 IEEE IEEE INFOCOM 2004sf) DHT Mesh: Structured overlays like distributed hash tables (DHTs) ??? view the overlay as a distributed data structure that dictates both the network topology and message routing. This integrated view has been shown to be massively scalable, requiring O(log n) 
2243 in the face of large feedback delays. This has led to a more robust REM presented in . C. Related works An extensive literature exists on flow control, including the original TCP flow control and recent enhancement in , the binary feedback schemes of, e.g., , , two bit feedback scheme of , the control theoretic approach of, e.g., , , , etc. Also see a recent 
1028 effective retrieval, reuse of content, or adaptation of content to a users interest. In parallel with research concerning the Semantic Web, a variety of semantic standards have emerged, e.g. RDF or Topic Maps , which focus on the semantic modeling of multimedia content, i.e. not the presentation of media but their semantic interrelationships are described. As a novel approach to 
382 are impractical for large environments. One of the attempts to solve this problem is presented Myron Hattig Intel Corporation Open Source Robotics Hillsboro, Oregon Email: myron.hattig@intel.com in where a sampling-based technique is used. Rather than storing and updating a complex probability distribution, a number of samples are drawn from it. The other approaches utilize partially 
173 (P2P) systems rely on cooperation among selfinterested users. For example, in a file-sharing system, overall download latency and failure rate increase when users do not share their resources . In a wireless ad-hoc network, overall packet latency and loss rate increase when nodes refuse to forward packets on behalf of others . Further examples are file preservation , discussion 
173 this context is the tragedy of the commons where resources are under-provisioned due to selfish users who free-ride on the systems resources, and is especially common in large networks . The problem has been extensively studied adopting a game theoretic approach. The prisoners dilemma model provides a natural framework to study the effectiveness of different strategies in 
181 whitewashing can be nearly eliminated from the system. The adaptive stranger policy does this without requiring centralized allocation of identities, an entry fee for newcomers, or rate-limiting .  Short-term History: History also creates the possibility that a previously well-behaved peer with a good reputation will turn traitor and use his good reputation to exploit other peers. 
181 effective with shared history. This is because whitewashers always appear to be strangers and therefore the Reciprocative players will always defect on them. This is consistent with previous work showing that punishing strangers deals with whitewashers. However, Figure 12 shows that Stranger Defect is not effective with private history. This is because Reciprocative requires some initial 
181 systems inspired additional body of work , mainly in the context of packet forwarding in wireless ad-hoc routing , and file sharing . Friedman and Resnick consider the problem of zero-cost identities in online environments and find that in such systems punishing all newcomers is inevitable. Using a theoretical model, they demonstrate that such a 
188  Large populations and high turnover: A file sharing system such as Gnutella and KaZaa can exceed 100, 000 simultaneous users, and nodes can have an average life-time of the order of minutes .  Asymmetry of interest: Asymmetric transactions of P2P systems create the possibility for asymmetry of interest. In the example in Figure 1, A wants service from B, B wants service from C, and C 
2360 = log xi. In , an allocation policy called minimum potential delay is proposed with Ui(xi) =?1/xi, which is shown in to approximate the fairness of the TCP on the current Internet. In , the following class of utility functions is proposed ? ?1 1?? (1 ? ?) x Ui(xi,?)= i if ? ?= 1 (1) log xi if ? =1 for ? ? 0. This includes all the previously considered allocation policies  
2360 (one with larger ?) always less efficient (has a smaller aggregate throughput)? This conjecture is prompted by the various examples in resource allocation in the literature in wired networks , , , in wireless networks, , , in economics, , etc. These examples seem to illustrate (quoted from ) the fundamental conflict between achieving flow fairness and maximizing overall 
2360 (L = 1), T (?) is strictly decreasing in ? for the linear network with uniform link capacity. Example 2: Linear network with nonuniform capacity The linear network of Example 1 is considered in with L =2, but with different link capacities c1 <c2. The authors calculated the source rates under max-min fairness: x0(?) =x1(?) = c1 2 , x2(?) =c2 ? c1 2 and pointed out that source rate x0 will 
2722 packets at slow speed to see whether a new path is available. The probing speed should take into consideration the route discovery behavior of the underlying routing protocol. For instance, in DSR , a packet without a route will be kept in a buffer at the routing agent, while the routing agent keeps trying to find a route for the packet. If no route can be found within a certain time limit, 
2722 standard TCP implementations. Below we discuss two sets of simulations: one in a medium size one-hop MANET, and the other in a large size multi-hop scenario. We use ns-2 (v2.1b8a) with DSR in our simulations. A. One-Hop Scenario In this set of simulations, all mobile nodes are within one-hop of transmission range to each other inside a 170m by 170m space. The nodes use the random 
695 that represents a person. This says something about the concept of author. A concept may have different types of relations with other concepts. As in typical object-oriented modeling techniques , the parent relation (specialization/generalization), the part-of relation, and non-hierarchical relations between concepts (e.g., in the form of predicate frames) are used for defining concepts in 
2243 TCP for many distributions of inter-loss times. I. INTRODUCTION We analyze in this paper the performance of TCP (Transmission Control Protocol), the widely-used transport protocol of the Internet , . TCP is a reliable window-based flow control protocol where the window is increased until a packet loss is detected. Here, the source assumes that the network is congested and reduces its 
688 global variables) and instance variables (also called fields). The data values in each can be constrained by programmer-declared invariants, as they are in, for example, the Java Modeling Language . The correctness of a program relies on these invariants. Consequently, any tool or technique for checking the correctness of the programmanual or automatic, static Peter Müller ETH Zurich 
688 for method invocations. Described in detail in the ESC/Java Users Manual , these heuristics are a compromise between flexibility and likelihood of errors and do not guarantee soundness. JML provides static invariants to express properties of static fields and objects referenced from static fields. Static invariants correspond to our module invariants. Analogously to our methodology, 
939 avatar what to do, e.g. pick up object or attack monster, rather than how to do it. III. Peer-to-Peer Infrastructure A number of peer-to-peer overlays have recently been proposed, including CAN , Chord , Tapestry and Pastry . These self-organizing, decentralized systems provide the functionality of a scalable distributed hash table, by reliably mapping a given object key to a 
188 new game. Lacking hard data on RPGs, we have instead used real life measurement of the Gnutella P2P system. It has been found that over a period of 60 hours, the average session time was 2.3 hours . We realize that file sharing and online gaming session lengths are apples and oranges, but given our anecdotal data, 2.3 hours seems conservative, if anything. Equating failure and exits, this 
943 to do, e.g. pick up object or attack monster, rather than how to do it. III. Peer-to-Peer Infrastructure A number of peer-to-peer overlays have recently been proposed, including CAN , Chord , Tapestry and Pastry . These self-organizing, decentralized systems provide the functionality of a scalable distributed hash table, by reliably mapping a given object key to a unique live 
943 on which we implemented SimMud. Our algorithm can, however, readily be extended to other hashing functions, and it can even be simplified for a more deterministic routing algorithm like Chord . A. Mapping games states on to peers We group players and objects by regions, and distribute the game regions onto different peers by mapping them to the Pastry key space. Each region is assigned 
943 that a key will almost always be routed to the node whose ID is numerically closest to key. P2P systems such as Chord have demonstrated this property even when half of the nodes fail simultaneously . With a much lower failure frequency, it is reasonable to assume that messages eventually reach the correct node. C. Shared state replication We design a lightweight primary-backup mechanism to 
939 Our proposal thus requires a name resolution infrastructure that can scalably resolve flat names. Distributed hash tables (DHTs) represent one possible solution to this resolution problem (see for background on DHTs), and so we borrow from that literature as well. Thus, this work is a pastiche of borrowed elements; our contribution is both the distillation of some basic principles and 
940 Our proposal thus requires a name resolution infrastructure that can scalably resolve flat names. Distributed hash tables (DHTs) represent one possible solution to this resolution problem (see for background on DHTs), and so we borrow from that literature as well. Thus, this work is a pastiche of borrowed elements; our contribution is both the distillation of some basic principles and 
939 tremendous popularity in the Internet. P2P systems are classified either as unstructured (such as Napster, Gnutella, and Freenet) or as structured (such as Distributed Hash Table (DHT) systems , ) based on the type of the overlay topologies they create. We focus on the use of a distributed rating scheme for tackling the free-rider phenomenon that has been observed in P2P systems such 
939 methods are cheat-proof, or whether the scheme can be distributed. P2P architectures have been extensively studied in the recent past. Example systems are Napster, Gnutella (unstructured) and CAN and Chord (structured). A survey of P2P research is beyond the scope of this paper. There has been a recent trend toward incentive compatible distributed system design . In , the 
943 tremendous popularity in the Internet. P2P systems are classified either as unstructured (such as Napster, Gnutella, and Freenet) or as structured (such as Distributed Hash Table (DHT) systems , ) based on the type of the overlay topologies they create. We focus on the use of a distributed rating scheme for tackling the free-rider phenomenon that has been observed in P2P systems such as 
943 refreshes the rating information from the corresponding main supervisor. However, we can always choose k > 2 and give equal responsibility to all supervisors when considering malice. Chord is an ideal infrastructure for setting up and maintaining such ring based supervisory overlays. Chord 3sorganizes users on a ring, and each user is mapped into a fixed point on the ring by hashing 
943 cheat-proof, or whether the scheme can be distributed. P2P architectures have been extensively studied in the recent past. Example systems are Napster, Gnutella (unstructured) and CAN and Chord (structured). A survey of P2P research is beyond the scope of this paper. There has been a recent trend toward incentive compatible distributed system design . In , the authors present a 
173 of the overlay topologies they create. We focus on the use of a distributed rating scheme for tackling the free-rider phenomenon that has been observed in P2P systems such as Napster and Gnutella , . We present (Section IV) one distributed rating mechanism along with two different ratings validation schemes. In the first validation scheme, we present a Structured Verification Scheme 
173 the need for a distributed rating system is the free-rider phenomenon observed in file-sharing P2P systems. This phenomenon has the following characteristics:  Most files (e.g., 98% reported in ) belong to a small percentage of the users (20%, respectively). The ratio of the number of queries to the number of users that respond to queries is similar. Hence, the quality and availability of 
188 the overlay topologies they create. We focus on the use of a distributed rating scheme for tackling the free-rider phenomenon that has been observed in P2P systems such as Napster and Gnutella , . We present (Section IV) one distributed rating mechanism along with two different ratings validation schemes. In the first validation scheme, we present a Structured Verification Scheme (SVS) 
181 the services a user has provided to the community. When there is no negative rating and users start at zero, there is no incentive for these users to change their names or identifiers. See for a discussion of the social cost of cheap pseudonyms. A user might be assigned negative ratings for bad or fraudulent transactions. We might want to reprimand users in such cases. This is also a 
2360 the link capacity. (b) Fairness: The available network bandwidth should be shared fairly among users. In recent years, price-based rate control schemes have received much attention , , , , . Under these schemes, the network charges users a price per unit transmission rate that depends on the current traffic load at individual links. Users then adapt their transmission rates to 
2249 example with respect to a given vector? weight is defined ? ? ??? ??? ? ? as . A positive margin corresponds to a correct classification and the more positive the margin the greater the confidence that the classification is correct. The margin has been frequently used in the context of Support Vector Machines (SVMs) and Boosting (e.g. ). However, for the definition of 
2249 ??? , and then we would need to normalize function??? the . Here, we use ? ? the norm for the normalization.sgin over all¨ examples, i.e. ? ? ??? ? ?? ??? ????? ? ? ?£¢ (2) A reasonable choice for a convex combination is to maximize the minimum margin of the examples, i.e.s? ? ? such thats? ?s? ? ¡¥¤§¦ ?©¨????s??????¢ (3) choose? Roughly speaking, the larger the margin the better the 
2249 data, as all patterns are classified with some non-negative margin . Several approaches have been proposed to deal with this situation. For SVMs slack variables have been frequently used to allow for some soft margin, i.e. violations of the margin constraints similar to (7). In the dual domain the introduction of slack variables leads to an ? ? - norm constraint on the dual 
2249 ? ? ? ??? ? ? . To show how to mini???? ???? ??? ? ? ¢ (38) P? Note that it fulfills the assumptions made in Lemma 3. Furthermore, as frequently and successfully used for regression with SVMs , we the§ consider -insensitive loss: §?? ? ? ????? ? ????? ?? ¡?¤?¦ ? ? ?©? ? ????? ? ? ? ? ? ? §???¢ (39)s-insensitive loss has appealing properties, as it will usually lead to sparse solutions of 
939 multicast achieves low delay and induces low link and node stress . Scribes approach to group management could be implemented on top of other structured peer-to-peer overlay networks like CAN , Chord , or Tapestry . In fact, Scribe has been implemented on top of CAN . Next, we describe Pastry and the construction of group trees using Scribe in more detail. 2.1 Peer-to-peer 
939 to large and highly dynamic groups. Like Scribe, Bayeux , and CAN-Multicast are group communication systems built on top of structured peer-to-peer overlays, namely Tapestry and CAN . Neither Bayeux nor CAN-multicast support an anycast primitive.sWhile such a primitive could be added, neither protocol can support highly dynamic groups efficiently. CAN-multicast builds a 
940 of each group. Scribe can handle group sizes varying from one to millions, and it supports rapidschanges in group membership efficiently. All nodes join Pastry, a structured peer-to-peer overlay . Subsequently, nodes may join and leave potentially many groups many times to amortize the cost of building the Pastry overlay. This, combined with Pastrys already scalable algorithms to join the 
940 fact, Scribe has been implemented on top of CAN . Next, we describe Pastry and the construction of group trees using Scribe in more detail. 2.1 Peer-to-peer overlay Pastry is fully described in . Here, we provide a brief overview to understand how we implement group management and anycast. In Pastry, numeric keys represent application objects and are chosen from a large identifier space. 
943 achieves low delay and induces low link and node stress . Scribes approach to group management could be implemented on top of other structured peer-to-peer overlay networks like CAN , Chord , or Tapestry . In fact, Scribe has been implemented on top of CAN . Next, we describe Pastry and the construction of group trees using Scribe in more detail. 2.1 Peer-to-peer overlay Pastry 
2243 Science Lab University of Illinois at Urbana-Champaign Urbana, IL 61801 rsrikant@uiuc.edu 1 Introduction Congestion control in the Internet was introduced in the late 1980s by Van Jacobson . Jacobsons algorithm which is implemented in the transport layer protocol called TCP (Transmission Control Protocol) has served the Internet well during a time of unprecedented growth. However, 
2249 any feature selection. We next describe SVM learning and the combined knowledge sources adopted. Much of the description follows that of Lee and Ng (2002). 2 Support Vector Machines (SVM) The SVM (Vapnik, 1995) performs optimization to find a hyperplane with the largest margin that separates training examples into two classes. A test example is classified depending on the side of the hyperplane it lies 
2249 splice sites from pseudo sites which wouldnt be spliced. Support Vector Machine (SVM) is known as an efficient machine learning method used in many scientific disciplines including bioinformatics . As several researchers have shown, DNA sequence data can be treated with adequate design of kernel functions i.e. core parts of SVM . We focused on patterns of nucleotide doublets of DNA 
175 can be characterized at both the requestlevel and session-level. In this paper, we consider request-level characterization. Much work has been done on characterizing web workloads (for example , among others too numerous to mention), and there have been many different perspectives taken. Traces were taken from web servers, web proxies, and web browsers. What makes an E-commerce workload 
175 it is not clear if they provide typical data for all types of web sites.sMost published studies on workload characterization on web servers use information servers in the most traditional sense . Characteristics considered important are: file size distribution, file popularity, request arrival process, etc. Some of the important results are as following: 1) HTML and image files account for 
2249 2 SVMs classification and regression The SVMs give a simple way to obtain good classification results with a reduced knowledge of the problem. The principles of SVMs have been developed by Vapnik and have been presented in several works like . The classification task is reduced to find a decision frontier that divide the data into the groups that we want to separate. The simplest 
2249 to that in equation (6) but using as error measure the ?-insensitive function and taking into account the fact that y values are real. For further information about this optimization problem, can be consulted. (6)s3 Noise detection and substitution In this work the first problem is to detect the noisy pixels. This task is treated as a classification procedure where the pixels are 
350 multiple path options. However, the router delay for deterministic routers, and consequently their corresponding clock cycles, can be signi cantly lower than adaptive routers as pointed out in . This di erence in router delays is due to two main reasons: Number of virtual channels. Two virtual channels are su cient to avoid deadlock in dimension ordered routing ; while adaptive routing 
350 policy depends also on the state of the router (i.e the occupancy of various virtual channels) causing increased router complexity and thereby higher router delays. The results reported in show that the router delays for adaptive routers are about one and a half to more than twice as long as the dimension-order router for worm-hole routing. The advantage of adaptive routing in 
350 blocking. 2.3 Modeling Router Delay In this section we describe a router delay model for the virtual cut-though deterministic and adaptive routers. The model is based on the ones described in . These models account for both the logic complexity of the routers as well as the size of the crossbar as determined by the number of virtual channels that are multiplexed on one physical channel. 
350 only when very large bu er sizes are used. All of these added delays result in adaptive routers that are 15 to 16 % slower than deterministic routers. These results are similar to the results in where 15% to 60% improvement is required for f- at routers with similar number of virtual channels and under worm-hole routing. 3 Hybrid Routing This section describes the mechanism of the hybrid 
350 same dimension and uses direction-order routing for its deterministic routing algorithm. Comparisons of adaptive and deterministic router implementations, for worm-hole routing, are described in and . However, the comparison in does not account for the reduced queuing delay in adaptive routing. In the reduction in queuing delay for worm-hole routing is taken into account 
352 multiple path options. However, the router delay for deterministic routers, and consequently their corresponding clock cycles, can be signi cantly lower than adaptive routers as pointed out in . This di erence in router delays is due to two main reasons: Number of virtual channels. Two virtual channels are su cient to avoid deadlock in dimension ordered routing ; while adaptive routing 
352 policy depends also on the state of the router (i.e the occupancy of various virtual channels) causing increased router complexity and thereby higher router delays. The results reported in show that the router delays for adaptive routers are about one and a half to more than twice as long as the dimension-order router for worm-hole routing. The advantage of adaptive routing in 
352 blocking. 2.3 Modeling Router Delay In this section we describe a router delay model for the virtual cut-though deterministic and adaptive routers. The model is based on the ones described in . These models account for both the logic complexity of the routers as well as the size of the crossbar as determined by the number of virtual channels that are multiplexed on one physical channel. 
352 avoid deadlock). Note that this relationship includes the delivery port. Delay equations for the routers are derived, using the above parameters. The constants in these equations were obtained in using router designs along with gate-level timing 8sestimates based on a 0.8 micron CMOS gate array process. Three main operations are used in all of the routers simulated here which contribute to 
352 for the Symult 2010 and the Intel Paragon . The Paragon router also uses the 0.8 micron CMOS gate array technology. It gives comparable performance to those routers found in with a delay of 40 nanoseconds and channel bandwidth of 200 megabytes/second. The Triplex routing algorithm is an example of a multi-class routing algorithm in which the dynamic selection of 
356 router delays is due to two main reasons: Number of virtual channels. Two virtual channels are su cient to avoid deadlock in dimension ordered routing ; while adaptive routing (as described in ) requires a minimum of three virtual channels in k-ary n-cube networks. Output channel selection. In dimension-ordered routing, the output channel selection 2sMessage Latency (ns) 800.0 600.0 400.0 
356 router. This routing scheme is deadlock free: for any given message, the choice of paths selected is always a true subset of those that could be selected by the adaptive algorithm described in . Since the adaptive algorithm has been proven deadlock free, the hybrid is also deadlock free. 13s3.2 Pipelined Implementations The Pipelined Hybrid Router implementation is shown in Figure 4. It 
2249 model in just one pass of the training data. Their accuracy is however relatively modest. At the other end of the spectrum lie SVMs based on elegant foundations of statistical learning theory . Their training time is quadratic to the number of training examples, but they are known to be the most accurate. The simplest task in text classification is to determine whether a document belongs 
2289 energy end-to-end reliable paths can be calculated and implemented for reactive (on-demand) routing protocols. We have experimented with the Ad-hoc On-demand Distance Vector Routing protocol (AODV) . It should, however, become obvious from our description that our technique can be generalized to alternative on-demand routing protocols (e.g., DSR ? T. Nadeem A. Agrawala are with the Dept. 
2289 nodes set up forwarding pointers to the destination. Once the source node receives the RREP, it may begin to forward data packets to the destination. Details of the AODV protocol can be found in . Our proposed modifications adhere to the on-demand philosophy, i.e. paths are still computed on-demand and as long as an existing path is valid, we do not actively change the path. Clearly other 
2722 Distance Vector Routing protocol (AODV) . It should, however, become obvious from our description that our technique can be generalized to alternative on-demand routing protocols (e.g., DSR ??? T. Nadeem A. Agrawala are with the Dept. of Computer Science, University of Maryland, College Park, MD 20742, USA. Emails: {nadeem,suman,agrawala}@cs.umd.edu. S. Banerjee is currently with the 
2722 over the region.  Mobile Random: Initially, nodes are distributed uniformly at random over the region. During the simulation, nodes move around the region using the random waypoint model with zero pause time. In all our simulations we had a set of 12 flows that were active over the duration of the experiment. We use both TCP and UDP flows for different experiments. For the TCP 
1673 a histogram of these scores for all sixteen clusters; clearly, these observers tend to agree quite strongly on what the clusters are about. (1) structure, landscape (2) horse (3) tree (4) war (5) people (6) people (7) people (8)figure,animal,porcelain (9) mountain, nature (10) book (11) cup (12) people (13) plate (14) portrait (15)people, religion (16)people, art, letter Figure 4. Each 
1673 can be used to predict words based on image segments. Specifically, if B is the set of segments in the image under consideration, then Pw ( | Bd , ) ? PBw ( , | d) =? Pw ( | cPBcdPc ) ( | , ) ( ) (5) c In the case of Model I completing the above calculation is not completely straightforward because the aspect model is properly expressed in terms in of the documents of the training set, and we 
578 exhibit a considerable amount of structure. In response, several algorithmic techniques have been developed which exploit database structure to accelerate search time or reduce storage requirements . Consequently, the performance of these approaches are subject to the structure or statistical characteristics of the database. Ternary Content Addressable Memories (TCAMs) provide a 
578 filter databases through confidentiality agreements . Gupta and 3sMcKeown obtained access to 40 real filter databases and extracted a number of useful statistics which have been widely cited . In , Gupta and McKeown generated synthetic two-dimensional databases consisting of source-destination address prefix pairs by randomly selecting destination address prefixes from publicly 
578 to filter properties in terms of a tuple specification. To be specific, we define the filter 5-tuple as vector containing the following fields.  t, source address prefix length, ??? t, destination address prefix length,  t, source port range width, the number of port numbers covered by the range,  t, destination port range width, the number of port 
578 database measurements and synthetic database generation, we define a new metric, scope, to be lg(# of possible packet headers covered by the filter). Specifically, scope = lg{(2 32?t ) × (2 32?t ) × t × t ×(2 8(1?t) )} = (32 ? t) + (32 ? t) + (lg t) + (lg t) 71 78 85 +8(1 ? t) (1) Scope translates the filter tuple into a measure of filter specificity and is 
578 define a smoothing parameter r which limits the maximum radius of deviation from a target tuple. Radius is measured in units of scope, or the lg(5d distance). For example, if the target tuple is , then is a tuple at radius five from the target. A database generated with r set to zero would have a tuple distribution whose set of unique tuples and relative weights would be 
499 is a function of, we need to monitor its size in order to ensure that it does not get very large. We estimate how large the precomputation logic is by computing the size of its corresponding ROBDD . In the sequel, we describe a branching algorithm that selects the best subset of inputs. The pseudocode is shown in Fig. 7. The procedure SELECT LOGIC receives as arguments the function ?, the 
499 the Logic: The Boolean operations of OR and cofactoring required in the input selection procedure can be carried out efficiently using reduced, ordered binary decision diagrams (ROBDDs) . In the pseudocode of Fig. 7, we show how to obtain the ?I C ?P function. We also need to compute ?I and ?P independently. We do this in exactly the same way, by including in ?I the cofactors 
188 comparison of complete information and incomplete information schemes in the context of our public good formulation is presented in . The inefficiency of p2p systems has been pointed out in and designing incentives for contribution using reciprocity concepts is discussed in among others. There exist several real p2p applications which use reciprocity-based (e.g., ) 
2722 . Directed diffusion borrows heavily from the literature on adhoc unicast routing. Specifically, it is a close kin of the class of several reactive routing protocols proposed in the literature . Of these, it is possibly closest to in its attempt to localize repair of node failures, and its deemphasis of optimal routes. The differences between ad-hoc routing and directed diffusion 
939 between peers. However, they differ from one another in terms of their lookup services, and the current P2P protocols in these systems are not scalable. Chord , Pastry , Tapestry , CAN are examples of a second generation of peer-to-peer systems. Their routing and location schemes are based on distributed hash tables. In contrast to the first generation P2P systems such as 
939 anteed a definite answer in a bounded number of network hops. The second generation of routing and location schemes is also considered more scalable. Surprisingly, most of the P2P protocols to date make the assumption that all nodes tend to participate and contribute equally to the system. Thus, these protocols distribute tasks and place data to peers based on this assumption. However 
939 and event notification system that demonstrates the benefits of the PeerCQ protocol in building a scalable information monitoring application. There are several P2P protocols proposed so far . Similar to work done in Chord , Tapestry , and Pastry , the P2P protocol described in this paper is built based on distributed hash table and ideas originated from Plaxtons routing 
188 these protocols distribute tasks and place data to peers based on this assumption. However P2P applications should respect the peer heterogeneity and user characteristics in order to be more robust . Another common weakness of the second generation P2P protocols is the lack of flexibility in optimizing the key to peer matching algorithms to incorporate important performance metrics such as 
943 model. Files are transferred directly between peers. However, they differ from one another in terms of their lookup services, and the current P2P protocols in these systems are not scalable. Chord , Pastry , Tapestry , CAN are examples of a second generation of peer-to-peer systems. Their routing and location schemes are based on distributed hash tables. In contrast to the first 
943 anteed a definite answer in a bounded number of network hops. The second generation of routing and location schemes is also considered more scalable. Surprisingly, most of the P2P protocols to date make the assumption that all nodes tend to participate and contribute equally to the system. Thus, these protocols distribute tasks and place data to peers based on this assumption. However 
943 initialization module works when a new peer joins the network and how the departure or failure of existing peers is handled.s3.1 Overview Similar to most of the second generation of P2P protocols , PeerCQ provides a fast and distributed computation of a hash function, mapping information monitoring requests (in form of continual queries) to nodes responsible for them. It extends consistent 
943 list is 2r +1 and we call r the neighbor list parameter. 3.2 Capability-Sensitive Service Partitioning The PeerCQ protocol extends the existing routedquery based P2P protocols, such as Chord or Pastry , to include a capability-sensitive service partitioning scheme. Service partitioning can be described as the assignment of CQs to peers. By capability-sensitive, we mean that the 
943 ability to efficiently find peers to execute a CQ from a potentially huge number of peers. Inspired by the lookup operations described in Pastry , Tapestry , Plaxton Routing , and Chord , the PeerCQ P2P lookup service is designed to find peers that are most appropriate to execute a CQ in a PeerCQ network in terms of good load balance and better system utilization. It provides two 
1957 a second level inference mechanism which produces a final decision. The second approach applies to most systems since 1993, and is reffered to as classifier combination. According to Kittler et al , there are two reasons for combining classifiers - efficiency and accuracy. Simple classification tasks may be achieved by using multistage classifiers, such that classification stops once an 
943 and disbursed partial keys. Oceanstore , Past , and CAN are examples of file sharing and storage systems based on dynamic naming and lookup techniques such as Tapestry and Chord . For these, a file name is used to derive a key that is systematically routed toward nodes where the file might reside. The second major type of overlay network may be classified as ad hoc and is 
2249 for ML=DM algorithms draws its roots in two fundamental bodies, the so-called Probably Approximately Correct (PAC) learning model of , and the Statistical Learning Theory, fathered by Vapnik . The principle is that the examples are drawn from some UNCORRECTED PROOFs1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 TCS 4562 ARTICLE IN PRESS R. Nock / Theoretical Computer Science 
2249 before. We have only access to its estimator over the sample collected. This raises statistical issues to evaluate the quality of this estimator (and h), issues discussed in many papers (see e.g. ). The objective of our paper is not to discuss the statistical burden of the theory, but its computational issues. Proving most negative complexity-theoretic results for ML/DM follows a quite 
2673 as fast as possible. Several methods for measuring the long-range dependence parameter ? have been proposed (see Appendix A for details of each one). The most well-known methods are the R/S method , variance-time analysis , the periodogram method , the Whittle estimator , and the wavelet method . All these methods except Whittles are graphical. Only the last two 
2673 traffic, this can be viewed as zooming out in time, i.e., since many increments of Xi are juxtaposed in time, zooming out makes the juxtaposed increments appear as one increment, as shown in . Let ? (m) (k) denote the autocorrelation function of X (m) n . Then, Xi is said to be asymptotically second-order self-similar if for k ? 1 lim m?? ?(m) (k) = 1 2 ((k + 1)2H ? 2k 2H + (k ? 1) 2H 
2673 with H = 1 2 , the Xis are uncorrelated. Hence, throughout this thesis, we consider the range 0 < H < 1 only. The presence of self-similarity in 9snetwork traffic was observed by Leland et al. . Since then, second-order self-similarity has become a dominant framework for modeling network traffic. An example of the self-similar process Yt is fractional Brownian motion, first introduced by 
2673 method acknowledges the fact that this process is second-order self-similar. Figure 3.4 displays Ethernet measurements for a local area network traffic at Bellcore, Morristown, New Jersey . It was collected on August 29, 1989 and lasted for about fourteen minutes. Each observation represents the number of packets sent over the Ethernet per 100 ms. This data was considered by Leland 
939 of control messages and also significant overhead for member joins/leaves. B. Multicast over P2P Overlays The algorithm described in describes a broadcast mechanism that operates over CAN . Nodes forward to their neighbors in the d-dimensional space, as this is defined in CAN. There are also provisions made to eliminate duplicate messages and prevent looping of the packets around the 
2360 = log xi. In , an allocation policy called minimum potential delay is proposed with Ui(xi) = ?1/xi, which is shown in to approximate the fairness of the TCP on the current Internet. In , the following class of utility functions is proposed Ui(xi, ?) = ? (1 ? ?) ?1 x 1?? i log xi if ? ?= 1 if ? = 1 for ? ? 0. This includes all the previously considered allocation policies  maximum 
2360 (one with larger ?) always less efficient (has a smaller aggregate throughput)? This conjecture is prompted by the various examples in resource allocation in the literature in wired networks , , , in wireless Appears in Proceedings of IEEE Infocom, Hong Kong, March 2004. (1) networks, , , in economics, , etc. These examples seem to illustrate (quoted from ) the 
2360 (L = 1), T (?) is strictly decreasing in ? for the linear network with uniform link capacity. Example 2: Linear network with nonuniform capacity The linear network of Example 1 is considered in with L = 2, but with different link capacities c1 < c2. The authors calculated the source rates under max-min fairness: x0(?) = x1(?) = c1 2 , x2(?) = c2 ? c1 2 and pointed out that source rate x0 
3018 issue is adaptability, where information is provided to the client application, typically from the operating system, to help it adapt to changes in resource availability and network connectivity . Some of these systems include applications using an adaptable interface, including adaptable protocols. The Internet Content Adaptation Protocol (ICAP) is a solution developed by an industry 
2289 in wireless ad-hoc networks, dominant pruning. 1sI. INTRODUCTION Route discovery in on-demand routing protocols is based on route request (RREQ) and route reply (RREP) messages (e.g., AODV and DSR ). A request is relayed until it reaches a node with a valid route to the destination or the destination itself, which triggers a reply message sent back to the originator. RREQs are 
2722 wireless ad-hoc networks, dominant pruning. 1sI. INTRODUCTION Route discovery in on-demand routing protocols is based on route request (RREQ) and route reply (RREP) messages (e.g., AODV and DSR ). A request is relayed until it reaches a node with a valid route to the destination or the destination itself, which triggers a reply message sent back to the originator. RREQs are propagated 
2734 it has a route to the destination. 6sIV. SIMULATIONS AND PERFORMANCE RESULTS To compare AODV-EDP against other protocols, we use traffic and mobility models similar to those previously reported in . We implemented AODV-EDP in Qualnets, and compare it against AODV-DP ¡¤£ (AODV with Dominant Pruning), and standard AODV with no hello messages. In the simulation scenarios, we vary both the number 
2734 AODV. AODV-DP shows that DP alone can improve AODV, but it also shows that there is room for more improvement (i.e., there is some more redundancy that can be eliminated). As pointed out in , the possibility of link failures is low with low mobility, but due to the node move8sPacket delivery ratio Normalized routing load 1.05 1 0.95 0.9 0.85 0.8 0.75 0.7 0.65 8 7 6 5 4 3 2 1 0 -1 
940 Scribe, a large-scale, decentralized event notification infrastructure built upon Pastry, a scalable, self-organizing peer-to-peer location and routing substrate with good locality properties . Scribe provides efficient applicationlevel multicast and is capable of scaling to a large number of subscribers, publishers and topics. Scribe and Pastry adopt a fully decentralized peer-to-peer 
940 of the Pastry routing and object location infrastructure. Section 3 describes the basic design of Scribe and we discuss related work in Section 4. 2 Pastry In this section we briefly sketch Pastry . Pastry forms a secure, robust, self-organizing overlay network in the Internet. Any Internet-connected host that runs the Pastry software and has proper credentials can participate in the overlay 
940 routing tables can be restored by exchanging O(log 2 bN) messages. In the following, we briefly sketch the Pastry routing scheme. A full description and evaluation of Pastry can be found in . For the purposes of routing, nodeIds and keys are thought of as a sequence of digits with base 2 b . A nodes routing table is organized into ?log 2 bN? rows with 2 b ? 1 entries each. The 2 b ? 1 
940 the node state, i.e., the routing table, leaf set and neighborhood sets, in the presence of node failures, node recoveries, and new node arrivals. The protocol is described and evaluated in . Briefly, an arriving node with the newly chosen nodeId X can initialize its state by contacting a nearby node A (according to the proximity metric) and asking A to route a special message using X 
940 sets, updates its own leaf set and then notifies the members of its new leaf set of its presence. Routing table entries that refer to failed nodes are repaired lazily; the details are described in . 2.3 Pastry API In this section, we briefly describe the application programming interface (API) exported by Pastry which is used in the Scribe implementation. The presented API is slightly 
939 network traffic for two-word and three-word queries. Department of Computer Sciences The University of Texas at Austin (karu,simha,browne)@cs.utexas.edu 1 Introduction Peer to peer (P2P) networks are emerging as potentially important structures for information and content management and distribution. Effective keyword search is a crucial method for information and content management. Recent 
939 stored in peer to peer file systems also have an equivalent 2 link structure. The documents make references to other documents in the file system. In systems with bounded search such as CAN , Pastry or Chord the GUID (Global Unique Identifier) implements a pointer to each document. All these systems are distributed hash table (DHT) based systems. Systems like Freenet 
940 network traffic for two-word and three-word queries. Department of Computer Sciences The University of Texas at Austin (karu,simha,browne)@cs.utexas.edu 1 Introduction Peer to peer (P2P) networks are emerging as potentially important structures for information and content management and distribution. Effective keyword search is a crucial method for information and content management. Recent 
940 in peer to peer file systems also have an equivalent 2 link structure. The documents make references to other documents in the file system. In systems with bounded search such as CAN , Pastry or Chord the GUID (Global Unique Identifier) implements a pointer to each document. All these systems are distributed hash table (DHT) based systems. Systems like Freenet while providing 
943 network traffic for two-word and three-word queries. Department of Computer Sciences The University of Texas at Austin (karu,simha,browne)@cs.utexas.edu 1 Introduction Peer to peer (P2P) networks are emerging as potentially important structures for information and content management and distribution. Effective keyword search is a crucial method for information and content management. Recent 
943 file systems also have an equivalent 2 link structure. The documents make references to other documents in the file system. In systems with bounded search such as CAN , Pastry or Chord the GUID (Global Unique Identifier) implements a pointer to each document. All these systems are distributed hash table (DHT) based systems. Systems like Freenet while providing no bounded 
1551 estimating such high-dimensional motions models is that each flow vector has to be estimated from a relatively small number of pixels. This is in contrast to more global, parametric motion models which remain more reliable as long as the underlying scene motion can be well approximated. For example, inter-frame motions were modeled as homographies in , which estimated their parameters 
499 of our approach. I. INTRODUCTION Reduced ordered Binary Decision Diagrams (BDDs) are a data structure for efficient representation and manipulation of Boolean functions. They were introduced in and are frequently used in formal verification and logic synthesis. In many verification tools methods for functional simulation based on BDDs are used. A crucial point here is the time needed to 
499 (denoted by Latin letters) are bound to values in B :? £ 0¤ 1¥ . It is well-known that a Boolean function f : B n ¦ B over the variable set Xn can be represented by a Binary Decision Diagram (BDD) , i.e. a directed acyclic graph where a Shannon decomposition ? f fxi? 1¨ xi fxi? xi § 0 ? 1 ? n© i is carried out in each node. In the following, only reduced, ordered BDDs are considered and for 
499 nodes are assumed to be eliminated and variables are encountered at most once and in the same order (the variable ordering) on every path from the root to a terminal node. For more details see . Formally, this fixed ordering can be expressed with a mapping £ 1¤???????¤ n¥ ¦ £ x1¤???????¤ xn¥ ?: of each BDD level to a variable. Thus we write ? ?§ k© xi , if variable xi is the k-th element 
1028 semantics for the data on the Web. In 1998 the W3C issued a recommendation of a metadata model and language to serve as the basis for such infrastructure, the Resource Description Framework (RDF) . As RDF evolves, it is increasingly gaining attraction from both researchers and practitioners, and is being implemented in world-wide initiatives such as the Open Directory Project, Dublin Core, 
1028 graphs. This approach permits to view RDF specifications as data while keeping their knowledge-base semantics. 1.3 Related Work The RDF model was introduced five years ago as a W3C recommendation . Its formal semantics, however, is still an ongoing work . From a logical point of view, Yang and Kifer in , present an F-logic version of RDF. They define two notions of entailment for RDF 
1028 languages, this feature appears as a specification of a schema to be used when processing the query . 2. PRELIMINARIES In this section we present the RDF model following the W3C documents . We use the abstract representation of the model as graphs, and do not discuss any serialization of the model (e.g. its XML-based syntax). 2.1 RDF graphs Assume there is an infinite set U (RDF URI 
939 actual distance to the object. Worse, it is neither fault tolerant nor scalable, since the directory becomes a single point of both failure and contention. Several recent proposals, Chord , CAN , Pastry , and Viceroy , address the load aspect of this problem by distributing the directory information over a large number of nodes. In particular, they can find an object with a 
939 and successor nodes, as well as a logarithmic number of chords which cross greater distances within the circle. Queries are forwarded along chords until they reach their destination. CAN places objects into a virtual, high-dimensional space. Queries are routed along axes in this virtual space until they reach their destination. Pastry is loosely based on the PRR scheme, 
939 D. Kubiatowicz, S. Rao, and B. Y. Zhao Table 1. Comparison of Object Location Systems. ? Scheme Insert cost Space Stretch, metric Hops Balanced? CHORD O(log 2 n) O(n log n)  O(log n) Yes CAN O(rn 1/r ) nr  rn 1/r Yes Pastry O(log 2 n) O(n log n)  O(log n) Yes Viceroy O(log n) O(n)  O(log n) Yes This paper (Tapestry) O(log 2 n) O(n log n)  O(log n) Yes Awerbuch and Peleg 
940 to the object. Worse, it is neither fault tolerant nor scalable, since the directory becomes a single point of both failure and contention. Several recent proposals, Chord , CAN , Pastry , and Viceroy , address the load aspect of this problem by distributing the directory information over a large number of nodes. In particular, they can find an object with a polylogarithmic 
940 until they reach their destination. CAN places objects into a virtual, high-dimensional space. Queries are routed along axes in this virtual space until they reach their destination. Pastry is loosely based on the PRR scheme, routing queries via successive resolution of digits in a high-dimensional name space. While its overlay construction leverages network proximity metrics, it does 
940 Table 1. Comparison of Object Location Systems. ? Scheme Insert cost Space Stretch, metric Hops Balanced? CHORD O(log 2 n) O(n log n)  O(log n) Yes CAN O(rn 1/r ) nr  rn 1/r Yes Pastry O(log 2 n) O(n log n)  O(log n) Yes Viceroy O(log n) O(n)  O(log n) Yes This paper (Tapestry) O(log 2 n) O(n log n)  O(log n) Yes Awerbuch and Peleg  O(n log 3 n) O(log 2 n), general 
940 repeat distance measurements to compare those neighbors with its own, replacing further away nodes where appropriate. This is the same idea as the heuristic neighbor table building algorithms in and . In all these cases, when a new primary neighbor has been chosen, the node needs to move some object pointers. This can be done efficiently as described in Section 4.2. Note that such 
943 of the actual distance to the object. Worse, it is neither fault tolerant nor scalable, since the directory becomes a single point of both failure and contention. Several recent proposals, Chord , CAN , Pastry , and Viceroy , address the load aspect of this problem by distributing the directory information over a large number of nodes. In particular, they can find an object with 
943 could be used to find small stretch routing tables and/or answer approximate distance queries in arbitrary metric spaces. 3 Most of the recent work on peer-to-peer networks ignore stretch. Chord constructs a distributed lookup service using a routing table of logarithmic size. Nodes are arranged into a large virtual circle. Each node maintains pointers to predecessor and successor nodes, 
943 gives a metric space.sOF4 K. Hildrum, J. D. Kubiatowicz, S. Rao, and B. Y. Zhao Table 1. Comparison of Object Location Systems. ? Scheme Insert cost Space Stretch, metric Hops Balanced? CHORD O(log 2 n) O(n log n)  O(log n) Yes CAN O(rn 1/r ) nr  rn 1/r Yes Pastry O(log 2 n) O(n log n)  O(log n) Yes Viceroy O(log n) O(n)  O(log n) Yes This paper (Tapestry) O(log 2 n) 
943 they require a central coordinator, they are not truly P2P, and the crawl process is entirely under the control of Grub.sOf most relevance to our work are DHT-based web crawlers built using Chord . These crawlers propose a single partition scheme, and do not examine the tradeoffs between different schemes, nor do they investigate rate throttling of sites. Since they experiment with only a 
2243 units that alert peers of new nodes joining the system, and of who has which blocks. The rate of updates passed along each link per second, ?, is subject to an AIMD flow control algorithm , which additively increases and multiplicatively decreases update rates depending on available bandwidth estimates. The intuition behind controlling the update rate in this manner is the 
943 the Slurpie system grows to the point where this is insufficient, the topology server functionality could be distributed. Specifically, a number of hosts that provide this service could form a DHT , , , and the file name could be used to look up the server responsible for the specific file. However, we do not believe the scalability of the topology server will be the limiting factor 
939 system grows to the point where this is insufficient, the topology server functionality could be distributed. Specifically, a number of hosts that provide this service could form a DHT , , , and the file name could be used to look up the server responsible for the specific file. However, we do not believe the scalability of the topology server will be the limiting factor in the 
940 system grows to the point where this is insufficient, the topology server functionality could be distributed. Specifically, a number of hosts that provide this service could form a DHT , , , and the file name could be used to look up the server responsible for the specific file. However, we do not believe the scalability of the topology server will be the limiting factor in the 
939 Pastry form a ring. However, we emphasize that our design can be equally applied to structured overlay protocols whose identifier spaces do not form a ring, including CAN, Tapestry, and Kademlia . A multi-ring protocol stitches together the rings and implements global routing and lookup. To applications, the entire hierarchy appears as a single instance of a structured overlay network that 
940 overlay networks provide a decentralized, self-organizing substrate for distributed applications and support powerful abstractions such as distributed hash tables (DHTs) and group communication . Most of these systems use randomized object keys and node identifiers, which yields good load balancing and robustness to failures. However, in such overlays, applications cannot ensure that a key 
943 overlay networks provide a decentralized, self-organizing substrate for distributed applications and support powerful abstractions such as distributed hash tables (DHTs) and group communication . Most of these systems use randomized object keys and node identifiers, which yields good load balancing and robustness to failures. However, in such overlays, applications cannot ensure that a key 
1069 set up and maintain, and often needs adjustments for new data sets. We have recently developed (and implemented within Febrl) new probabilistic techniques based on hidden Markov models (HMMs) which achieved better standardisation accuracy and are easier to set-up and maintain compared to popular commercial linkage software. A HMM is a probabilisticsnite-state machine consisting of a set 
1069 set of discrete, hidden (unobserved) states, a matrix of transition probabilities between those hidden states, and a matrix of probabilities with which each hidden state emits an observation symbol (this emission matrix is also called an observation matrix ). In our case, the hidden states of the HMM will correspond to the outputselds of the standardised addresses. The Febrl approach to 
1069 symbols in the HMM used in step 3. 7 3. The list of tags is given to a HMM, and assuming that each tag (observation symbol) has been emitted by one of the hidden states, the Viterbi algorithm willsnd the most likely path through the HMM, and the corresponding hidden states will give the assignment of the element from the input list to the outputselds. Consider for example the address 
943 spawned. This precludes some higher-order uses of cords used in later examples. We consider this a defect and intend to implement global lookup using standard distributed hash table technology , and foresee no problems doing soin fact, it will simplify several aspects of our current implementation.) Cords cant produce effects, so the final piece of our network is the concept of a 
173 amount of files to share with other users. Thus we did not see the general free-riding behavior seen in other P2P populations, where most users download files and only a few users share and upload . Surprisingly, with another P2P application, Kazaa, which does not enforce sharing, we saw more outbound than inbound traffic. The reasons for this result are unclear, but it may be the presence of 
939 (P2P) systems. Various application-level multicast implementations have been proposed , most of which are directly implemented on top of P2P infrastructures (Chord , CAN or Pastry ). The good scalability of the underlying P2P networks give these application-level multicast one of the properties of the original IP Multicast service, that of serving content to a 
940 Various application-level multicast implementations have been proposed , most of which are directly implemented on top of P2P infrastructures (Chord , CAN or Pastry ). The good scalability of the underlying P2P networks give these application-level multicast one of the properties of the original IP Multicast service, that of serving content to a virtually 
943 Peer-to-Peer (P2P) systems. Various application-level multicast implementations have been proposed , most of which are directly implemented on top of P2P infrastructures (Chord , CAN or Pastry ). The good scalability of the underlying P2P networks give these application-level multicast one of the properties of the original IP Multicast service, that of serving 
2679 queuing model, where both job arrival and job size distribution are not Poisson, and there are n servers serving a queue with limited capacity m. A web server is an example. Previous research has shown that Poisson processes are valid only for modeling the arrival of user-initiated TCP sessions such as the arrival of TELNET connections and FTP connections. HTTP arrivals are not Poisson. 
1069 (7)sIEEE TRANSACTION PAMI 12 C. Hidden Markov models Nowadays, hidden Markov models (HMMs) are basic components of the most successful natural language processing tasks, including speech , , and handwritten text recognition , , speech translation , and shallow parsing , to name but a few. HMMs have also proved useful in many other pattern recognition and 
1069 financial returns modeling . There exist many variants of Markov models, including differences as to whether the symbols are emitted at the states or at the transitions. See for example , , , . Definition 2: AHMM is a 6-tuple M = ?Q, ?, I, qf, T, E?, where  Q is a finite set of states,  ? is a finite alphabet of symbols,  T:(Q?{qf}) × Q ? R + is a state to state transition 
1069 have attempted to learn, infer, identify or approximate PFA from a given set of data. This task, often called language modeling is seen as essential when considering pattern recognition , machine learning , computational linguistics or biology . The general goal is to construct a PFA (or some alternative device) given data assumed to have been generated from this 
483 (air, water, soil, chemistry), precision agriculture, transportation, factory instrumentation and inventory tracking, condition based maintenance, smart spaces, and military surveillance (, , , , and ). The goal of a sensor network is to collect, process, and forward sensed data to other sensor nodes and/or base stations. Therefore, a routing service is essential to 
483 of a sensor field. If there are no base stations available, one natural replacement is beacon nodes used in self-localization systems or header nodes in any other self-clustering system . These nodes are dynamically maintained so that each sensor node is close to at least one such node. Deployment of routing services can be accomplished by deploying these high-level nodes first. In 
2305 routing service is essential to sensor network applications. Several non-traditional routing services have been proposed for sensor networks. They include Greedy Perimeter Stateless Routing (GPSR) , Geographical Energy Aware Routing (GEAR) , Trajectory Based Routing (TBF) , Directed-diffusion , TwoTier Data-Dissemination (TTDD) , Content-Based MulSteven Berson, Bob Braden 
2722 in hazardous locations, for example in disaster areas to aid rescue efforts, for mineral or oil prospecting, in defense applications in the battlefield etc. Most of the previous routing protocols ( ???) for wireless ad-hoc networks concentrate on finding and maintaining routes in the face of changing topology caused by mobility or other environmental changes. Typical protocols use shortest 
2289 locations, for example in disaster areas to aid rescue efforts, for mineral or oil prospecting, in defense applications in the battlefield etc. Most of the previous routing protocols ( ???) for wireless ad-hoc networks concentrate on finding and maintaining routes in the face of changing topology caused by mobility or other environmental changes. Typical protocols use shortest path 
939 overlay network. The effort on application-specific overlay networks has targeted on widely usable applications such as multicasting, , , , , and peer-to-peer file sharing. Several other work has been dedicated to proposing a general overlay service networks that can be used to provide value-added service for a variety of application-layer services, such as 
943 of overlay network. The effort on application-specific overlay networks has targeted on widely usable applications such as multicasting, , , , , and peer-to-peer file sharing. Several other work has been dedicated to proposing a general overlay service networks that can be used to provide value-added service for a variety of application-layer services, such as 
943  intelligent query routing and network topologies are required to be able to route queries to a relevant subset of peers that are able to answer the queries. Modern routing protocols like Chord and CAN allow for sophisticated query routing based on distributed indices. More recently, in the Semantic Web context, schema based Peer-to-Peer networks such as the one described in have 
939 query routing and network topologies are required to be able to route queries to a relevant subset of peers that are able to answer the queries. Modern routing protocols like Chord and CAN allow for sophisticated query routing based on distributed indices. More recently, in the Semantic Web context, schema based Peer-to-Peer networks such as the one described in have emerged 
2289 daemons on his laptop and PDA that detect when no infrastructure-mode WiFi access point or DHCP service is available, and automatically switch into ad-hoc mode using a routing protocol such as AODV . Only the most dedicated, desperate, or geeky will go to this trouble, however. To most users, having a working network means being able to get to Google, CNN, and Amazon.com. Any ubiquitous 
2289 remains the same in IPv6. 2.3 Ad-Hoc Networks Do Not Scale Classic distance-vector and link-state routing protocols, as well as ad-hoc routing variants such as DSR and AODV , require every node to store and regularly exchange information about every other node in the network. This linear per-node storage and/or bandwidth overhead limits the scalability of these 
2289 as well as resilient. Ad-hoc routing protocols such as DSR address the management problem at the local level but are not scalable to Internet-wide adhoc networks. Landmark and AODV offer scalability under localized traffic patterns, but not under the global traffic patterns of the Internet. 5 UIP node identities are similar to those of Moskowitzs proposed Host Identity 
2249 features extracted from the dataset, we employed the following machine learning approaches: k-nearest neighbor rule , decision tree , neural network , and SVM (Support Vector Machine) . We performed 10-fold cross validation on each learning algorithm with a particular parameter setting and measured precision, recall, and F-measure to verify the effectiveness of each machine 
695 engineering, the (re-)use of software modules () illustrates the strategy of reusability. The reusability of (software) objects is also the major claim of the object-oriented approach (eg ). Most approaches to information systems development, including the ones which support the reuse of products, demand for an actual replacement of the information system by another information 
2722 the same path, they should encounter the same network conditions. Sharing a path also shields the potential discrepancy of route discovery for different paths. We use Dynamic Source Routing (DSR ) as the underlying routing protocol. 2 There are many existing studies in enhancing TCP performance in MANET, e.g. TCP-ELFN . Similar techniques may be applied to TFRC as well. In this paper, 
2154 instance, Figure 6 shows the measured 10-second averaged link bandwidth from node 1 to 2 in the 5-node chain scenario with 50Kbps background traffic (using the bandwidth measurement method in , ). Unlike wireline networks where a physical links bandwidth is constant, in MANET, a wireless links effective bandwidth is time-varying, depending on channel contention and signal fading. This 
940 that meets those criteria, the Geographic Hash Table (GHT). GHT is inspired by the new generation of Internet-scale Distributed Hash Table (DHT) systems such as Chord, CAN, Pastry, and Tapestry . In these systems, a data object is associated with a key and each node in the system is responsible for storing a certain range of keys. A name-based routing algorithm allows any node in the 
940 scalable DCS system must meet, and our geographic hashing approach to DCS architecture that meets these design goals. 3.1 Storage Abstraction Like the many distributed hash table systems before it , DCS provides a (key, value)-based associative memory. Events are named with keys. Both the storage of an event and its retrieval are performed using these keys. DCS is naming-agnostic; any naming 
940 and query load for distinct k values evenly across the area covered by a network. The service provided by GHT is similar in character to those offered by other distributed hash table systems . However, as is the case with those systems, much of the nuance to the GHT system design arises specifically to ensure robustness and scalability in the face of the many sorts of failures possible 
940 Results are the means of eight simulations. the network by GPSR in our simulations; we are evaluating GHT, not the underlying routing system, as is the practice in the evaluation of DHT systems . GPSR generates a constant volume of routing protocol traffic (beacons) per node, regardless of system size in nodes ; this load is of lower order than that generated by GHT, which sends 
940 on landmark routing, GHT uses GPSR, a flat routing algorithm wherein nodes are addressed with geographic coordinates. Although GHT was inspired by Distributed Hash Table systems like Chord and CAN , we did not adopt the routing algorithms used in these systems. These algorithms require nodes to be interconnected in a fairly rigid manner. On the Internet, node neighbor relationships are at the 
2305 the storage node for an arbitrary key. This enables nodes toput andgetsfiles based on their key, thereby supporting a hash-table-like interface. GHT uses the GPSR geographic routing algorithm as the underlying routing system to provide a similar hash-table-like functionality in sensornets. Our paper has 7 sections. We start with a brief discussion of data dissemination in sensornets in 
2305 replication, whereby events that hash to the same home node can be divided among multiple mirrors. 4. ALGORITHMS We proceed now to describe the algorithms that comprise GHT. GHT is built atop GPSR , a geographic routing system for multi-hop wireless networks. After briefly reviewing the features of GPSRs design relevant to GHT, we identify a previously unexploited characteristic of GPSR that 
2305 at the home node, as no neighbor of the home node can be closer to the destination. The packet then traverses the entire perimeter that encloses the destination, before returning to the home node . We name this perimeter the home perimeter. Under GHT, the home node knows to consume the packet when it returns after this tour of the home perimeter.sx y Figure 1: Greedy Forwarding Example: x 
939 that meets those criteria, the Geographic Hash Table (GHT). GHT is inspired by the new generation of Internet-scale Distributed Hash Table (DHT) systems such as Chord, CAN, Pastry, and Tapestry . In these systems, a data object is associated with a key and each node in the system is responsible for storing a certain range of keys. A name-based routing algorithm allows any node in the 
939 scalable DCS system must meet, and our geographic hashing approach to DCS architecture that meets these design goals. 3.1 Storage Abstraction Like the many distributed hash table systems before it , DCS provides a (key, value)-based associative memory. Events are named with keys. Both the storage of an event and its retrieval are performed using these keys. DCS is naming-agnostic; any naming 
939 and query load for distinct k values evenly across the area covered by a network. The service provided by GHT is similar in character to those offered by other distributed hash table systems . However, as is the case with those systems, much of the nuance to the GHT system design arises specifically to ensure robustness and scalability in the face of the many sorts of failures possible 
939 Results are the means of eight simulations. the network by GPSR in our simulations; we are evaluating GHT, not the underlying routing system, as is the practice in the evaluation of DHT systems . GPSR generates a constant volume of routing protocol traffic (beacons) per node, regardless of system size in nodes ; this load is of lower order than that generated by GHT, which sends 
939 on landmark routing, GHT uses GPSR, a flat routing algorithm wherein nodes are addressed with geographic coordinates. Although GHT was inspired by Distributed Hash Table systems like Chord and CAN , we did not adopt the routing algorithms used in these systems. These algorithms require nodes to be interconnected in a fairly rigid manner. On the Internet, node neighbor relationships are at the 
943 scalable DCS system must meet, and our geographic hashing approach to DCS architecture that meets these design goals. 3.1 Storage Abstraction Like the many distributed hash table systems before it , DCS provides a (key, value)-based associative memory. Events are named with keys. Both the storage of an event and its retrieval are performed using these keys. DCS is naming-agnostic; any naming 
943 and query load for distinct k values evenly across the area covered by a network. The service provided by GHT is similar in character to those offered by other distributed hash table systems . However, as is the case with those systems, much of the nuance to the GHT system design arises specifically to ensure robustness and scalability in the face of the many sorts of failures possible 
943 Results are the means of eight simulations. the network by GPSR in our simulations; we are evaluating GHT, not the underlying routing system, as is the practice in the evaluation of DHT systems . GPSR generates a constant volume of routing protocol traffic (beacons) per node, regardless of system size in nodes ; this load is of lower order than that generated by GHT, which sends 
943 on landmark routing, GHT uses GPSR, a flat routing algorithm wherein nodes are addressed with geographic coordinates. Although GHT was inspired by Distributed Hash Table systems like Chord and CAN , we did not adopt the routing algorithms used in these systems. These algorithms require nodes to be interconnected in a fairly rigid manner. On the Internet, node neighbor relationships are at the 
2305 printing job to the nearest printer. In sensor networks, the sensor nodes need to know their locations in order to detect and record events, or to route packets using geometric-aware routing, e.g., . One method to determine the location of a node is manual configuration. However, this is unlikely to be feasible for any large-scale deployment or when nodes move often. Another possibility is GPS 
483 in connectedness above the phase transition at which the radius is minimal for total localizability. VII. RELATED WORK Network localization is an active research field, e.g., , , , , , , , , , , , , , , , , . The previous approaches can be classified into two types: coarse-grained and fine-grained. percentage localized nodes 1 
2249 2: Mixtures of Same Type of Kernels . . . . . . . . . . . . . . . . . . . . . . . . . 18 7 Concluding Remarks 22 is1 Introduction 1.1 Kernel Methods Over the last few years, kernel methods have been increasingly popular in machine learning due to their conceptual simplicity and strong theoretical foundations. Kernel-based learning models and algorithms, such as support vector 
2249 (Section 5), it is worth noting that kernel learning forms an integral part of the entire classifier training process. On the contrary, traditional kernel-based classification methods, such as SVM and kernel FDA , treat the model selection (i.e., kernel selection) problem and the classifier training problem separately as two successive processes. They typically start by selecting an 
2249 problem, our focus in this paper is to use the classification problem to illustrate how kernel matrix learning can be performed. Typically, kernel-based classification methods such as SVM and kernel FDA first select or learn an appropriate kernel from data empirically, and then train a classifier with the kernel. The two problems, namely, kernel selection and classifier 
2249 Like other kernel methods, KNNC works over the feature space without explicit use of the feature vectors ?(x)s themselves. However, unlike other kernel-based classification methods such as SVM and kernel FDA , KNNC does not require solving a quadratic programming problem or an eigen decomposition problem. The consequence of this is that our method is simpler and significantly more 
939 time of last modification, time of object fetch from the origin server, and the current time. 2.2 Pastry A number of peer-to-peer routing protocols have been recently proposed, including CAN , Chord , Tapestry and Pastry . These self-organizing, decentralized systems provide the functionality of a scalable distributed hash-table, by reliably mapping a given object key to a 
939 web caching, where caches share Internet objects among themselves , and peer-to-peer request routing, characterized as decentralized, self-organizing, and faultresilient . Cooperative web caching (where autonomous web caches coordinate and share content) is found to be useful in improving hit ratio in a group of small organizations. There are many forms, viz. (1) a 
940 automatically. Squirrel uses a self-organizing, peer-to-peer routing substrate called Pastry as its object location service, to identify and route to nodes that cache copies of a requested object . Squirrel thus has the advantage of requiring almost no administration, compared to conventional cooperative caching schemes. Moreover, Pastry is resilient to concurrent node failures, and so is 
940 fetch from the origin server, and the current time. 2.2 Pastry A number of peer-to-peer routing protocols have been recently proposed, including CAN , Chord , Tapestry and Pastry . These self-organizing, decentralized systems provide the functionality of a scalable distributed hash-table, by reliably mapping a given object key to a unique live node in the network. The 
940 failures, and provide efficient routing of queries. Squirrel uses Pastry to store cached Web objects and directory information, and to efficiently locate them. Pastry is described and evaluated in ; for continuity and containment, we present a brief description here. Pastry is a peer-to-peer location and routing substrate that is efficient, scalable, fault resilient, and self organizing. A 
940 web caching, where caches share Internet objects among themselves , and peer-to-peer request routing, characterized as decentralized, self-organizing, and faultresilient . Cooperative web caching (where autonomous web caches coordinate and share content) is found to be useful in improving hit ratio in a group of small organizations. There are many forms, viz. (1) a 
943 of last modification, time of object fetch from the origin server, and the current time. 2.2 Pastry A number of peer-to-peer routing protocols have been recently proposed, including CAN , Chord , Tapestry and Pastry . These self-organizing, decentralized systems provide the functionality of a scalable distributed hash-table, by reliably mapping a given object key to a unique live 
943 web caching, where caches share Internet objects among themselves , and peer-to-peer request routing, characterized as decentralized, self-organizing, and faultresilient . Cooperative web caching (where autonomous web caches coordinate and share content) is found to be useful in improving hit ratio in a group of small organizations. There are many forms, viz. (1) a 
2243 packet loss as a congestion signal and an additive-increase-multiplicativedecrease-type congestion control mechanism at the end points was not part of the original TCP protocol but was proposed in and was subsequently added in the late 1980s in response to observed congestion collapse episodes in the Internet; see also Section 3.2.1 below. 11sas the Internet has scaled up several orders of 
2243 in October of 1986, when the network had the first of what became a series of congestion collapses completely unexpected, sudden and drastic (e.g., factor-of-thousand) drops in throughput ; while the network continued to transmit packets, the majority of them were retransmission, thereby lowering the effective throughput over the affected links. Subsequently, Van Jacobson 
2243 a stable mode with a full window of data in transit, either because they are too short or because they restarted after a packet loss. To make TCP robust to this new fragility, he also proposed in a number of engineering solutions that were soon thereafter incorporated into RFC-1122 , which lists the requirements for a conformant implementation of TCP as of 1989 12 . The proposed 
2673 a segment of the traffic rate process measured at some time scale looks or behaves just like an appropriately scaled version of the traffic rate process measured over a different time scale; see and the important follow-up studies and . More precisely, these and numerous subsequent empirical studies described pertinent statistical characteristics of the temporal dynamics of 
2679 measured at some time scale looks or behaves just like an appropriately scaled version of the traffic rate process measured over a different time scale; see and the important follow-up studies and . More precisely, these and numerous subsequent empirical studies described pertinent statistical characteristics of the temporal dynamics of measured traffic rate processes and provided 
2679 of individual traffic components as an invariant of Internet traffic for the past 10 or so years, despite the sometime drastic changes the network has undergone during that period; see for example . The implications for this networking-based explanation of the self-similarity phenomenon are farreaching and unexpected. On the one hand, the fact that we can explain self-similar scaling in terms 
1069 sketches a control curve. When only the observations are available, learning is most commonly performed by algorithms such as the Baum-Welch algorithm or generalized ExpectationMaximization methods . In our case, we explicitly provide data for both the observation and hidden layers by a suitably normalized set of coupled curves. Therefore, we can estimate a HMM by the statistics of the 
499 can be established. Using property languages such as the modal mu-calculus , much more advanced properties can be formulated. Using spectacular techniques, such as Binary Decision Diagrams , partial order reduction , bit-hashing , supported by the even more spectacular increase of the speed of computers and the use of networks of computers it is now possible to effectively and 
1957 way of combining the outputs of all classifiers to get a final decision. To do this, we have used the average, which is a simple and effective scheme of combining predictions of the neural networks . Other combination rules such as product, min, and max have been tested but the simple average has produced better results. In order to evaluate the objective functions described above we have used 
939 overlays providing different functionality. It provides mechanisms to advertise services and to discover services, contact nodes, and service code. 1. Introduction Recent systems such as CAN , Chord , Kademlia , Pastry and Tapestry provide a selforganizing structured peer-to-peer (p2p) overlay network that can serve as a substrate for large-scale peer-to-peer 
940 It provides mechanisms to advertise services and to discover services, contact nodes, and service code. 1. Introduction Recent systems such as CAN , Chord , Kademlia , Pastry and Tapestry provide a selforganizing structured peer-to-peer (p2p) overlay network that can serve as a substrate for large-scale peer-to-peer applications. One of the abstractions that these 
940 node. Additionally, each cached copy of the list can be updated independently, as described above, to ensure its freshness and to prevent overloading of the contact nodes. P2p overlays like Pastry and Tapestry exploit network locality to provide better performance. They require that the contact node be close to the joining node in the underlying network topology in order to achieve 
943 providing different functionality. It provides mechanisms to advertise services and to discover services, contact nodes, and service code. 1. Introduction Recent systems such as CAN , Chord , Kademlia , Pastry and Tapestry provide a selforganizing structured peer-to-peer (p2p) overlay network that can serve as a substrate for large-scale peer-to-peer applications. One of 
2305 is a feasible next hop. Usually this occurs because the node observes a void region between itself and the destination. For example the Greedy Perimeter Stateless Routing (GPSR), introduced in , makes greedy forwarding decisions (as GRS in Section II.A). When a packet reaches a concave node, the GPSR tries to recover by routing around the perimeter of the void region. Recovery mechanisms, 
181 et al. surveys many such schemes for tracking nodes reputations. In reputation systems, if obtaining a new identity is cheap, negative reputations can be shed easily. Friedman and Resnick study the case of cheap pseudonyms, and argue that suspicion of strangers is costly. Distributed reputation systems have been proposed in a number of contexts, including MIX-Nets and Gnutella 
188 kinds of unavailability: (i) host availability, a binary value that indicates whether a host is reachable and the desktop grid client is up, which corresponds to the definition of availability in ; and (ii) CPU availability, a percentage value that quantifies the fraction of the CPU that can be exploited by a desktop grid application, which corresponds to the definition in [3, 12, 33, 15, 
188 While this data is interesting for applications that require hosts to be reachable for given period of time (i.e. content distribution) and could be used to confirm and extend some of the work in , it is less relevant to our probCumulative percentage 1 0.9 0.8 0.7 0.6 0.5 weekdays weekends weekday mean: .391 trillion ops weekend mean: .848 trillion ops 0 5 10 15 Interval length in number of 
188 of the temporal structure of host and CPU availability in desktop grid, which is fundamental for advanced resource management, resource selection, and application scheduling. The works in have presented measurement and analysis of host availability in enterprise systems and in large peer-to-peer networks (where host availability is defined as the host being reachable). While these 
1939 be kept small even with a large number of critical load instructions. 4. EXPERIMENTAL METHODOLOGY To study the performance of IMPT, we developed a cycleaccurate simulator based on SimpleScalar 3.0a . We added major enhancements to the simulator to implement accurate bus and memory contention. To this end, we have changed the buses and memory models of SimpleScalar into event driven models. The 
1939 a general-purpose workload . A. Simulation Methodology To obtain performance data for the benchmarks, we use SimpleScalar, a cycle-accurate out-of-order superscalar processor simulator . We consider the scenario in which the operating system is invoked each time a SRAS swap is required and the scenario where the processor primarily handles SRAS swapping. The OS-managed swapping 
2722 the next hop to each destination in the network. Then, at the time of packet forwarding, a node has to only look up the next hop entry in the routing table for the destination indicated. DSR and AODV are examples of reactive or on-demand protocols. In these protocols, the source, at the time of sending a packet, broadcasts a query to obtain a route to the destination. The broadcast 
2289 hop to each destination in the network. Then, at the time of packet forwarding, a node has to only look up the next hop entry in the routing table for the destination indicated. DSR and AODV are examples of reactive or on-demand protocols. In these protocols, the source, at the time of sending a packet, broadcasts a query to obtain a route to the destination. The broadcast query 
175 generates the reply from the very beginning even if the client has already received part of the reply. It is not a serious problem for most of the Web requests, since previous studies , have shown that most web replies are less than 8K bytes. However, it might introduce considerably longer delays when the requested file is very large. Two steps are needed to speed up the recovery 
1957 alphanumeric characters. For multiclassifier combination, five fusion schemes were investigated. These are sum, median, min, max, and simple majority voting. Details of these rules can be found in . All the tables presented forthwith include performance statistics averaged over the 10-fold cross validation experiments performed on the unseen test sets from the above database. Tables 1 and 2 
1102 required for each node in the hierarchy. For the representation of a node we introduce a non-linear speech-appearance model. This is an extension of an appearance model introduced by Cootes et al encoding relations between appearance parameters and speech vectors allowing the synthesis of facial configurations given new audio. For the root node the model is built using the full facial 
1102 one of our labelled training images annotated with the 82 landmarks. 4 HIERARCHICAL FACIAL MODELLING Facial area synthesis for each node in our hierarchical model is based on an appearance model . Given an audio input each node is used, in turn, to synthesise a facial area. Given our training set we begin building our model by extracting landmark shape data, and shape-free texture data, for 
1102 FACIAL AREA MODELLING AND NODE INITIALIZATION Given a subset of facial information from the global training set we first build an appearance model of the corresponding facial area as described in . Statistical PCA models of shape and texture are built using the training set and combined in a joint PCA model. We define this model as follows x ¤ P¥ W¦¨§ ¥ Q¥ ¡£¢x c (1) g ¡ ¢g ¤ P© Q© c (2) 
2722 Much work in sensor networks builds on results in ad-hoc networks that address the limitations of wireless networks (low bandwidth, high error rates, low power, disconnections) . The node localization problem has been previously discussed by others and usually requires estimates of inter-node distance, a difficult problem. Simi? and Sastry 3spresent a distributed 
2305 a second method we call Path Routing which enables us to embed one or mores paths adaptively in the sensor network. The protocol is an instance of geographic routing tailored to navigation . Hop-by-hop communication is used to identify the sensor nodes lying on the path. A message is broadcast which contains a list of coordinates. Each sensor that receives the message checks to 
2305 to some extent by choosing an appropriate path width or by adding acknowledgment messages to assure the path message reaches its destination. An approach similar to greedy perimeter routing could also be used to route around obstacles. The rest of this section presents the details of our method. A path is an array of X,Y coordinates designating waypoints along a route. A path 
939 comparable to our approach, since they are also creating an aggregation of the top k results from the peers. In contrast to our ranking-algorithm they do not use any broadcast-topology, but use CAN in combination with the vector space model (VSM) and latent semantic indexing (LSI) to create an index which is stored in CAN using the vector representations as coordinates. PlanetP 
2243 Since wireless access to the Internet is the most common application of this kind of networks, it is reasonable to assume that the traffic will be carried over the wellknown TCP/IP protocol suite . Hence, an important issue to address is the interaction between the 802.11 MAC and the closedloop nature of TCP. This is accomplished in the first part of the paper, where we estimate the 
2679 time increases. This is mainly due to the fact that serious congestion that causes a true timeout event can last for some time (considering the long range dependent nature of Internet traffic , ). Accordingly, even though a BTCP using BLE may treat the first true TO as a FTO, (and transmits data with half of previous congestion window), most likely it will receive another true TO, and 
499 area as well as high design quality by consideration of layout aspects during synthesis . These techniques make use of ordered Binary Decision Diagrams (BDDs) as introduced in . Their size often critically depends on the chosen variable ordering. In applications like logic synthesis it is most important to determine a good ordering, since a reduction in the number of BDD 
499 (denoted by Latin letters) are bound to values in B := {0, 1}. It is well-known that a Boolean function f: B n ? B over the variable set Xn can be represented by a Binary Decision Diagram (BDD) , i.e. a directed acyclic graph where a Shannon decomposition f = xifx i=1 + xifx i=0 (1 ? i ? n) into two cofactors in xi is carried out in each node, yielding a then-successor via a 1-edge and 
499 and variables are encountered at most once and in the same order (the variable ordering, e.g. x1 < x2 < x3 < x4 in Figure 2) on every path from the root to a terminal node. For more details see . Variable orderings are often denoted by permutations ?. For simplicity, the author uses the notation xi = ?(k), if variable xi is the k-th element of the variable ordering, i.e. xi is in the k-th 
2673 parameter. We provide upper and lower bounds on the constant that determines the scale parameter of the corresponding Weibull distribution. I. INTRODUCTION Since the seminal work of Leland et al. , there has been tremendous research work on the characterization and modeling of the Internet traffic. A number of studies have confirmed the prevalence of the Long Range Dependence (LRD) and 
2679 Range Dependence (LRD) and fractal behavior in LAN and WAN as well as in Web servers (see e.g. ). Self-similar (SS) scaling exists in large time scales (i.e. one second or larger), cf. , , . More recently, multi-fractal phenomena were observed and analyzed, see , , . At small time scale, the traffic still has mono-fractal behavior in the Internet backbone . Many 
188 kinds of availability: (i) host availability, a binary value that indicates whether a host is reachable and the desktop grid software is up, which corresponds to the definition of availability in ; and (ii) CPU availability, a percentage value that quantifies the fraction of the CPU that can be exploited by a desktop grid application, which corresponds to the definition in [3, 12, 42, 15, 
188 CPU availability just as it would be experienced by a compute-intensive desktop grid application. As a result, our method provides more detailed information than just measuring host availability . Moreover, our traces are not susceptible to OS idiosyncrasies, and can directly measure the effect of task failures (caused by mouse or keyboard activity, for example). In contrast, lightweight 
1069 model based solely on a map and a stream of non-continuous and noisy GPS sensor data. A general approach for solving such learning problems is the well-known ExpectationMaximization (EM) algorithm . In our application, EM is based on the observation that learning the model parameters would be easy if we knew the persons true location and transportation mode at any point in time. 
1069 between edges and modes, e.g., the probability of transiting from edge ? ? to edge ? ? in ????? mode. The discreteness of these transitions allows us to apply the well-known Baum-Welch algorithm , an EM algorithm for hidden Markov models (HMM). The Monte Carlo version of the Baum-Welch algorithm performs at each iteration both a forward and a backward (in time) particle filtering 2 
1069 from edge to at time £ and in mode ? ?§¦¨¡ . £?? §¤? §¤? ? ? ?§¦?¡ ? ?§¦?¡ ? ?§¦?¡ ? ?§¦?¡ ?§¦¨¡ ? at time is the probability transiting from mode to on edge ¥ ? ? . and A short derivation gives us , ¢ ? §¤? ?§¦?¡ §?? ?§¦¨¡ ???s?§¦¨¡ £?? ?§¦¨¡ §?? ?§¦¨¡ ? © ¡ £?? ? ??? ?§¦?¡ §?? ?§¦¨¡ ? ? £?? ? §¤? ?§¦?¡ ? (5) £?? ?§¦¨¡ £ ? §¤? ?§¦?¡ §¤? ?§¦?¡ ???s?§¦¨¡ £?? ?§¦?¡ §?? ?§¦¨¡ ? © ¡ £ ? ? ??? 
1939 compared to the superscalar; (5) the memory hierarchy used for both models is identical: an LSQ and a two-level cache hierarchy 2 . The superscalar is a 4-way out-of-order SimpleScalar simulation with the PISA instruction set, using gcc -O2 2.7.2 as 2 For this study we use a very similar LSQ for both ASH and the superscalar. As future work we are exploring the synthesis of program-specific 
483 spreading signatures, throughput I. INTRODUCTION AND MOTIVATION We consider a wireless sensor network which may contain thousands of tiny low-cost sensors scattered over a region of interest ,. The sensors (also called nodes) are battery operated (i.e., energy constrained), have limited memory and processing power, and form a randomly connected ad hoc network. Since the nodes are mostly 
943 within 95% of the optimal value. I. INTRODUCTION In this work, we address the problem of load balancing in peer-to-peer (P2P) systems that provide a distributed hash table (DHT) abstraction (, , , ). In such structured systems, each data item that is stored is mapped to a unique identifier ID. The identifier space is partitioned among the nodes and each node is responsible for 
943 may consist of peers that range from old desktops behind modem lines to powerful servers connected to the Internet through high-bandwidth lines. If node identifiers are chosen at random (as in , , , ), a random choice of item IDs results in an ¢¤£¦¥¨§?©???? imbalance factor in the number of items stored at a node. Furthermore, applications may associate semantics with IDs, which means 
943 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1 Load/Target Fig. 4. The effect of dislodges on the number of rounds. The load distribution is Gaussian. V. RELATED WORK Most structured P2P systems (, , , ) assume that object IDs are uniformly distributed. Under this assumption, the number of objects per node varies within a factor of ¢¤£¦¥¨§?©???? , where ? is the number of nodes in the 
943 this factor by considering a subset of existing nodes (i.e., a node along with neighbors) instead of a single node when deciding what portion of the ID space to allocate to a new node. Chord was the first to propose the notion of virtual servers as a means of im¥ ? §?© proving load balance. By allocating virtual servers per real node, Chord ensures that with high probability the number 
940 of the optimal value. I. INTRODUCTION In this work, we address the problem of load balancing in peer-to-peer (P2P) systems that provide a distributed hash table (DHT) abstraction (, , , ). In such structured systems, each data item that is stored is mapped to a unique identifier ID. The identifier space is partitioned among the nodes and each node is responsible for storing all the 
940 of peers that range from old desktops behind modem lines to powerful servers connected to the Internet through high-bandwidth lines. If node identifiers are chosen at random (as in , , , ), a random choice of item IDs results in an ¢¤£¦¥¨§?©???? imbalance factor in the number of items stored at a node. Furthermore, applications may associate semantics with IDs, which means that IDs 
940 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1 Load/Target Fig. 4. The effect of dislodges on the number of rounds. The load distribution is Gaussian. V. RELATED WORK Most structured P2P systems (, , , ) assume that object IDs are uniformly distributed. Under this assumption, the number of objects per node varies within a factor of ¢¤£¦¥¨§?©???? , where ? is the number of nodes in the system. CAN 
939 and disk storage, without any administration cost or centralized infrastructure support. The previous research work on P2P systems has mainly focused on providing scalable P2P discovery services , which enable data and resource sharing, in P2P systems. However, few have addressed the service sharing problem which is important for the user of P2P systems to utilize a wealth of application 
939 using application-specific QoS parameters such as frame rate, response time.  Discover service instances. Once the user request is acquired, the P2P lookup protocol, such as Chord or CAN , is invoked to retrieve the locations (i.e., IP addresses) and QoS specifications (Q in , Q out , R) of all candidate service instances, according to the abstract service path.  Compose a QoS 
939 P2P systems have drawn much research attention with the popularity of P2P file sharing applications such as Gnutella and Napster. However, most of the research work, such as Chord and CAN , focuses on providing an efficient lookup service which enables the data (e.g., mp3 files) and resource (e.g., disk storage) sharing in P2P systems. We believe that in order to make P2P systems 
188 number of application-level connections. Each hop in the service aggregation may include many network-level hops depending on the network distance between two peers. 2.2 Network Model According to , peers are highly heterogeneous and also reluctant to report their performance information to other peers or deliberately misreport the information. Hence, in order to provide efficient QoS 
943 and disk storage, without any administration cost or centralized infrastructure support. The previous research work on P2P systems has mainly focused on providing scalable P2P discovery services , which enable data and resource sharing, in P2P systems. However, few have addressed the service sharing problem which is important for the user of P2P systems to utilize a wealth of application 
943 output with a QoS level Q out , both of which are vectors of application-level QoS parameters. The application-level QoS parameters can be data format (e.g., MPEG, JPEG) , frame rate (e.g., fps), and others. In order to process input and generate output, a specific amount of resources R is required, which is a vector of required end-system resources (e.g., cpu, memory). The network 
943 QoS requirements using application-specific QoS parameters such as frame rate, response time.  Discover service instances. Once the user request is acquired, the P2P lookup protocol, such as Chord or CAN , is invoked to retrieve the locations (i.e., IP addresses) and QoS specifications (Q in , Q out , R) of all candidate service instances, according to the abstract service path.  
943 Work Recently, P2P systems have drawn much research attention with the popularity of P2P file sharing applications such as Gnutella and Napster. However, most of the research work, such as Chord and CAN , focuses on providing an efficient lookup service which enables the data (e.g., mp3 files) and resource (e.g., disk storage) sharing in P2P systems. We believe that in order to make 
939 robust and can route lookup queries in just one hop, thus enabling applications that cannot tolerate the delay of multi-hop routing. 1 Introduction Structured peer-to-peer overlay networks like CAN , Chord , Pastry , and Tapestry provide a substrate for building large-scale distributed applications. These overlays allow applications to locate objects stored in the system in a 
943 can route lookup queries in just one hop, thus enabling applications that cannot tolerate the delay of multi-hop routing. 1 Introduction Structured peer-to-peer overlay networks like CAN , Chord , Pastry , and Tapestry provide a substrate for building large-scale distributed applications. These overlays allow applications to locate objects stored in the system in a limited number of 
943 we associate a successor node with every 128-bit key key; this is the first node in the identifier ring clockwise from key. This mapping from keys to nodes is based on the one used in Chord , but changing our system to use other mappings is straightforward. Clients issue queries that try to reach the successor node of a particular identifier. We intend our system to satisfy a large 
1957 see that the above methodology can be also used for the case of more than two matchers. Among the fusion rules which can implement eq. (2), the most simple ones are the so-called fixed fusion rules . This term derives from the observation that such rules require no training parameters. In other words, eq. (2) can be implemented by simply combining the given matching scores without other kind 
2289 wireless link and node mobility. These issues differ significantly from their counterparts in both cellular networks and wired networks (such as the Internet), and have been extensively studied ,,. Recently, there has been significant interest in computing the capacity of ad-hoc networks ,,,. Consider an ad-hoc wireless network, where n identical nodes on a unit area 
2722 link and node mobility. These issues differ significantly from their counterparts in both cellular networks and wired networks (such as the Internet), and have been extensively studied ,,. Recently, there has been significant interest in computing the capacity of ad-hoc networks ,,,. Consider an ad-hoc wireless network, where n identical nodes on a unit area 
2249 every subset B of X there is a set F?F such that X ? F = B. F generates all subsets of X. The VC-dimension of F is defined as the supremum of the sizes of all finite sets that can be shattered by F ,. An underlying probability distribution (PD) is assumed. An i.i.d sequence X = X1...Xn is chosen with distribution ? PD. The relative frequencies of events are N(F ) = 1 n n i=1 I(Xi?F ). Sets 
1069 employed in , . Other approaches to capturing longer term dependencies have been presented in and functions of first order Markov chains such as the Hidden Markov Model (HMM) , successfully capture longer term dependencies, however, inevitably these come with an increased computational cost. DRAFT July 13, 2003sThe representation provided by such models is global in 
940 of flooding. The basic functionality they offer is lookup (key), which returns the identity of the node storing the object with that key. Recent proposed DHT systems include Tapestry , Pastry , Chord , CAN and Koorde . In these DHT systems, objects are associated with a key that can be produced by hashing the object name. Nodes have identifiers that share the same space as 
940 volume is also replicated. 6.3 Structured Peer-to-Peer Networks Besides Chord, there are many other structured Peer-to-Peer networks proposed in recent years, such as Tapestry , Pastry , CAN , Koorde , Skip Graphs and SkipNet . The routing algorithms used in Tapestry and Pastry are both inspired by Plaxton . The idea of the Plaxton algorithm is to find a 
2734 communication devices that lack centralized routing infrastructure. A number of recent studies are related to the investigation of throughput and traffic localization issues of ad hoc networks . One of the fundamental theoretical results is published by Gupta and Kumar in . They have shown that for stationary ad hoc networks the per node throughput of the system decays as ? ? 1 O ?n 
713 Another advantage of XML is the ability to query it to retrieve and manipulate data stored in the document. A number of query languages have been developed, including Lorel , Quilt , UnQL , XDuce , XML-QL , XPath , XQL , Xquery , and YaTL . XPath and Xquery are two query languages that received the W3C recommendation. XML-RPC XML-RPC (XML-Remote Procedure 
1939 compiler-based swapping methods more attractive. 6 Experimental Results We have implemented the methodology described in section 4 using the sim-outorder simulator from the SimpleScalar 2.0 suite , with the default configuration of 4 IALUs, 4 FPAUs, 1 integer multiplier, and 1 floating point multiplier. SimpleScalar simulates a MIPS-like machine, 17swith 32-bit integer registers and 64-bit 
943 enhanced HTML-document. Although, GnuViz was developed for a Gnutella network, it can be used within other existing networks like Freenet or JXTA and future networks like in Chord , Pastry or Tapestry too. Due to its modular design, only the crawler has to be adapted. 2.1. The crawler To explore the connections between the nodes participating in the Gnutella network, 
188 between the Gnutella nodes can also reach all over the world, and can also span the whole world. Previous measurement approaches concentrated on traffic issues (, ) and the user behaviour and not on the network structure. Other attempts to map the network only explore the network and do not map the network to its geographical locations . They are thus not able to show the 
939 peers and on fast file retrieval, with no guarantees that files will always be located. In Freenet , the emphasis is on ensuring anonymity. In contrast, distributed hash tables such as CAN , Chord , Pastry , and Tapestry guarantee that files will always be located, but do not support wildcard searches. One way to optimize these tradeoffs is to understand user behavior. In 
175 efficient solution design. A well known example is the relationship between file popularity in the Web and cache size. The popularity of web pages has been shown to follow a Zipf distribution , : few pages are highly popular and many pages are requested few times. As a result, the efficiency of increasing cache size is not linear: caching is useful for the popular items, but there is 
1028 of annotating images in the cultural heritage domain. Ontologies are rapidly emerging as engineering artifacts with standardized languages such as Resource Description Framework (RDF) 05=1 (Lassila and Swick, 1999) and RDF Schema (Brickley and Guha, 2000) that have been developed by the Semantic Web initiative (BernersLee et al., 1999) led by the World Wide Web Consortium (W3C). While ontologies allow for 
2722 for routing protocols that exploit connectivity determined by lower level link estimations to form a routing topology. Many wireless routing protocols assume connectivity by hearing certain packets. For example, ROUTE REQUEST and ROUTE REPLY messages are often building blocks for creating a routing structure. However, Figure 1(a) suggest that long unreliable links are likely to influence 
2722 to the current parent worsens, its link estimation will automatically degrade over time, allowing the selection of a new parent. This is in contrast to traditional link detection technique found in , which counts the number of transmission failures, and is better suited to handle semi-lossy links. If connectivity to the current parent is lost and no potential parents are available, the node 
2722 a parent based on the source address of the first flooding messagesthat it receives in each epoch. The broadcast protocol essentially captures reverse path routing as found in protocols such as DSR . IV Destination Sequenced Distance Vector (DSDV) uses destination based sequence numbers to avoid cycle formation . We adopt DSDV into our framework and preserve the essence of the protocol; 
1069 LOCALLY TESTABLE TREE LANGUAGES A number of algorithms have been proposed in the past to build automata from stochastic samples. In some cases the result is a non-deterministic automaton , ; in others the automata are deterministic , . Here, a stochastic sample ? = ?1, ?2, . . . ?|?| consists of a sequence of (possibly repeated) trees generated according to an unknown 
2722 information between any two nodes in the network. Typically, such support can be provided by a separate layer that supports a routing protocol for ad hoc networks, like Dynamic Source Routing (DSR) , and exposes an interface to query the routing information. 2.2 Architecture Components Figure 2(A) shows a high-level view of the DFuse architecture that consists of two main runtime components: 
2722 used for evaluating the routing quality, the most common one is probably the number of hops on the routing path. The protocols that use shortest path routing include Dynamic Source Routing (DSR) , Ad-hoc On-demand Distance Vector routing (AODV) and many others. Please refer to the surveys and the references therein. On the other hand, energy-aware routing algorithms, which try to 
2722 al. proposed an algorithm GAF which is designed to reduce the energy consumption by turning off unnecessary nodes. In , , the traditional energy-unaware routing protocols such as DSR or AODV were re-visited to take into account the energy-aware metric. All of the energy-aware protocols mentioned above are heuristics and do not provide any guarantee on the performance. The 
2289 common one is probably the number of hops on the routing path. The protocols that use shortest path routing include Dynamic Source Routing (DSR) , Ad-hoc On-demand Distance Vector routing (AODV) and many others. Please refer to the surveys and the references therein. On the other hand, energy-aware routing algorithms, which try to maximize the network survivability, have attracted a 
2289 an algorithm GAF which is designed to reduce the energy consumption by turning off unnecessary nodes. In , , the traditional energy-unaware routing protocols such as DSR or AODV were re-visited to take into account the energy-aware metric. All of the energy-aware protocols mentioned above are heuristics and do not provide any guarantee on the performance. The paper is 
2249 successfully e.g. in splines, multilayer perceptrons, regularization networks (Poggio and Girosi, 1990), Support Vector Machines (SVM) and related methods (see e.g. (Hastie et al., 2001)). SVM (Vapnik, 1998) is a powerful methodology for solving problems in nonlinear classification, function estimation and density estimation which has also led to many other recent developments in kernel based learning 
2249 with the selected components (compare to basis pursuit, see e.g. (Chen et al., 2001)). 3.2 Sparse LS-SVM substrates Sparseness is often regarded as good practice in the machine learning community (Vapnik, 1998; von Luxburg et al., 2004) as it gives an optimal and minimal representation of the solution (from the viewpoint of VC theory and compression) The primal-dual framework also provides another line 
2249 of the Lagrange multipliers. The 1-norm is considered min e,?,b,c,ev ?e?22 + ????1 s.t. (10) holds and ? + c = e. (16) where ? ? R + 0 acts as a hyper-parameter. This criterion leads to sparseness (Vapnik, 1998) as already exploited under the name of ?-SVM (Chang and Lin, 2002). A similar principle is applied in the estimation of sparse parametric models known as basis pursuit (Chen et al., 2001) or LASSO 
2249 sparse LS-SVM substrates) were obtained from 10-fold cross-validation (see Table 1). 5.2 Structure detection In order to test the structure detection mechanism, an artificial example is taken from (Vapnik, 1998) and the Boston housing dataset from the UCI benchmark repository was used for analyzing the practical relevance of the structure detection mechanism. This subsection considers the formulation as 
939 follows from the corollary that in fact almost all nodes are at distance log d n ? O(1). Many protocols (Chord, Kademlia , Pastry , Tapestry ) offer O(log n) degree and hop count. CAN uses degree d to achieve O(dn 1/d ) hops. These are near-optimal bounds but the lower boundsallows for (i) O(log n) hops using only constant degree and (ii) a degree of O(log n) achieving O((log 
940 node is at distance at least log d n ? 1. The averagecase claim follows from the corollary that in fact almost all nodes are at distance log d n ? O(1). Many protocols (Chord, Kademlia , Pastry , Tapestry ) offer O(log n) degree and hop count. CAN uses degree d to achieve O(dn 1/d ) hops. These are near-optimal bounds but the lower boundsallows for (i) O(log n) hops using only 
1673 images, they have been largely focused on two particular aspects. One is the extraction and recognition of text contained in web images . The other is image search and retrieval on the web . There has been no previous study on functionality based image categorization. Jianying Hu Amit Bagga Avaya Labs Research 233 Mount Airy Road Basking Ridge, NJ 07920 fjianhu, baggag@avaya.com Table 
1673 category S are photographic images in GIF format, while 13 of the 127 JPEG images are graphic images. Other researchers have also observed similar mixture of image classes within each single format . Thus, image format cannot be used as the definitive indication of photographic vs. graphic images. Much of previous research on image based classification in the document analysis community has 
1673 of different classes of images for classification. Swain et al. proposed using features such as degree of color saturation and number of dominant colors to separate photographic and graphic images . Lopresti and Zhou used similar features to identify text regions in web images. After investigating the two different approaches described above, it became clear to us that they are 
1673 cluster histogram is computed and used as the feature representing the whole image. 3.2. Color Features Swain et al. proposed 8 color related features to distinguish graphic and photographic images . A study of those features revealed that many of them are various heuristic ways of implementing aspects of the frequency domain characteristics that are better captured by the frequency domain 
1673 often contains useful information about the nature and content of the images. Much research has been carried out in the past on using the associated text for image searching and indexing on the web . For that particular task, it was found that the most relevant text fields are: image file names, image captions and alternate text (defined by the<alt> tag in HTML). The functional classification 
2249 in detail in Section 5. The data set is divided into five roughly equal parts, each containing roughly equal numbers of graphic and photographic images. A Support Vector Machine (SVM) classifier was then trained on each four of the five parts and tested onsthe remaining part. The process is rotated and the combined five part results were then pooled together to arrive at the overall 
1102 to a model of a face based on decoupling transformations of the domain of the image from transformation of the intensity values, akin to so-called active appearance or linear morphable models . However, unlike traditional active appearance models, we do not require manual selection and registration of interest points, but instead perform the learning automatically. Unlike , we do not 
1102 the general domain of deformable templates . Here, we do not have a general scene, but various deformations of the same face due to speech. Therefore, in the spirit of active appearance models , we assume that local variability of the domain can be modeled as linear transformations of a number of basis elements: w(x, t) = w0(x) + W (x)y(t); x ? ?, t = 1, 2, . . . (2) where W = [W1, . . . 
1102 frames, sampled at 60 frames per second. About 200 points were selected in the first frame and tracked throughout the sequence. We modeled face images using shape and radiance elements as in . The shape element s = (x1, x2, ..., xl) ? R 2l is defined by vertex coordinates (trackedsModeling and Synthesis of Facial Motion Driven by Speech 9 points) of an n-point triangular mesh 
188 of several peer-to-peer resource sharing communities, showing that in the absence of incentives for resource donation, most users only consume resources from the system, donating nothing back . To provide incentives for donating resources to the grid, OurGrid implements a scheme called the network of favors . Each site offers to the community access to its idle resources, 
1102 expressions. In this paper we address the issue of face modeling, video realistic face generation and facial expression synthesis and recognition using statistical active facial appearance models . Thanks to the French Incentive Concerted Action for Young Researchers (ACI Jeunes, Ministère de la Recherche) and the european Interface project (FP5 - IST) for funding. 2. ACTIVE FACIAL 
943  intelligent query routing and networkstopologies are required to be able to route queries to a relevant subset of peers that are able to answer the queries. Modern routing protocols like Chord , CAN and Pastry allow for sophisticated routing based on distributed indices. More recently, in the Semantic Web context, schema based Peer-to-Peer networks such as the one described in 
939 query routing and networkstopologies are required to be able to route queries to a relevant subset of peers that are able to answer the queries. Modern routing protocols like Chord , CAN and Pastry allow for sophisticated routing based on distributed indices. More recently, in the Semantic Web context, schema based Peer-to-Peer networks such as the one described in have 
940 and networkstopologies are required to be able to route queries to a relevant subset of peers that are able to answer the queries. Modern routing protocols like Chord , CAN and Pastry allow for sophisticated routing based on distributed indices. More recently, in the Semantic Web context, schema based Peer-to-Peer networks such as the one described in have emerged that are 
1028 This is not unique to RDF. It is merely a consequence of the general difficulty in rendering graphs well. It is also possible to view RDF as plain text using one of the RDF serialization syntaxes . While these can work well for small files, it can be difficult to see relationships between nodes scattered throughout the serialization. For example it is relatively easy to see the arcs from a 
1939 running time of the tool is in order of seconds for the benchmarks we used. We have used a Pentium 4, Sun UltraSparcIII, PA-8500 (HP) workstations for profiling purposes. The SimpleScalar simulator has been used for obtaining the number of misses for cache. We have used the CACTI model for energy estimation of both the cache and scratch pad memories and also for the 128Kb off-chip memory 
1939 that are powers of two while being greater or equal than the buffer size required in the scratch pad configuration. The cache line size has been selected to be the minimal allowed by the simulator (8 bytes, which is 2 data elements in all benchmarks). In this way, we compare solely how well is the temporal locality of the data exploited without considering spatial locality issues. These 
940 it is shown that while hypercube and ring geometries have about (log n)! different routes from a given source to a given target, PRR like networks have only one! Thus the basic architecture of is fragile and must be augmented with some form of robustness. The first overlay network that has both a provable low latency for paths and a high fault tolerance was presented by the authors in 
2102 two diversities in combination. In this paper, we take the HDR systems for an example, but our study applies to the HSDPA systems as well. Multiple-Input Multiple-Output (MIMO) antenna techniques , , have been studied extensively in the recent past. One technique is the orthogonal space-time block coding (STBC) , , which achieves both full transmit diversity and reliable 
2102 unit is bits/s/Hz. In the remaining part we neglect the subscript k whenever possible without confusion. A. STBC- or BLAST-coded MIMO Channels For the downlink channel of each user, STBC scheme (, ) transmits an array of different data streams from multiple transmit antennas simultaneously. It then duplicates the streams in time domain and sends them out from an orthogonal arrangement of 
2360 rj that is no bigger than ri. An example to achieve near-optimum Max-Min fairness among TCP and UDP users is . Later, Kelly et al. proposed proportional fairness criterion, and Mo et al. extended it to (p,?)proportionally fair (see Definition 1 in ). Mapping (p,?)proportionally fair into our notations, the (w,?)-proportional fairness says that given a positive w = 
382 the recent Bayesian revolution in applied statistics and related fields, including econometrics and biometrics. Their application in other fields such as image synthesis and mobile robotics is more recent. Principles The principle of using Monte Carlo methods for numerical integration is to approximate the integral ? I = p(x)g(x) d d x, by estimating the expectation of the function 
173 Stanford and Harvard are promoting their use among their students as a valuable mean of publishing of research ideas and results. 5 Studies have claimed Gnutella is affected by free riding 5 The technology is incredibly simple but has some disruptive characteristics. Weblogging tools create the standard HTML file for human browsing but also some semantically well defined XML files 
181 question of identity is central to reputation systems. We require three properties of identity which we call persistent, unique, and distinct. We are investigating the use of expensive pseudonyms , cryptographically generated unique identifiers , and secure hardware modules to counter identity problems such as the Sybil attack . Redemption. Our solution enforces redemption of 
483 header overhead. Address centric routing. Routing in IP networks is based on the addresses of the hosts and networks. Due to the application specific nature of sensor networks, data-centric routing is often preferable to addresscentric routing. We use a specific form of application overlay networks to implement data-centric routing and data aggregation for TCP/IP sensor networks. Limited 
688 have been proposed by . All three techniques are employed in our work. Depends clauses were introduced and refined in and are implemented in the Java Modeling Language (JML) . The details of this notion slightly differ from ours. 9 Conclusions and Future Work We have presented a framework for the modular verification of object-oriented programs. Much needs still to be 
695 objects for each class, and the values of local variables and attributes. Contracts for classes and interfaces are well known as restrictions on all objects of this type during their lifetime . An invariant contract (?, t) consists of an OCL invariant constraint ? 3sand the constrained class 1 t. We write s |= ? when the OCL formula ? is true for every object of class t in state s. 
2249 Lunch In Section 1.2, I discussed the question whether any learning bias can be superior to all other learning biases informally. PAC results by Blumer et al. (1987) and similar VC style results (Vapnik, 1998) which show that we can be more certain about the error rate of a hypothesis which has been learned from a small hypothesis language than we can be about the error rate of a hypothesis which 
2249 h occurs. The penalty term G(\Delta; \Delta) penalizes the size or, (more frequently) when the models are infinite, the number of free parameters (Moody & Utans, 1992; Moody, 1992) or VC dimension (Vapnik, 1998) of the model H i in which a focused hypothesis h occurs for the first time in the stratification. Frequently, G(E S (h); H i ) = E S (h) + penalty(H i ). By means of a penalization term, 
2249 O-okayama, Meguro-ku, Tokyo, 152-8552, Japan 1 Introduction In recent years, a number of kernel-based learning algorithms such as the regularization networks , the support vector machines , and the Gaussian process regression have been investigated. These kernel machines are shown to work very well on real-world problems, given appropriate kernel functions. For general purposes, 
2249 hand, a lot of attention have been paid recently to designing kernel functions using the problem-dependent prior knowledge. Various methods for constructing suitable kernels have been proposed . In this contribution, we propose a framework for designing kernel functions for regression. 2 A Kernel Design Framework for Regression Let us consider a one-dimensional regression problem. Kernel 
2570 services available, but requires providing automatic mechanisms so that the services can be linked in appropriate and meaningful ways. Automatic composition and interoperability of Web services have been achieved through mapping, service verification, and execution monitoring. Scientific workflow is supposed to support interoperation through semantics. It may have the potential to 
1190 those information sources maintain complete autonomy but |at the same time| their locations, data models, contents and query interfaces should not burden the users posing queries. Several works, , have addressed the previous problem on the basis of a shared framework to overcome those diculties found by the users. The goal of all such works is to provide users with an interface to access 
939 information sufficiently up-to-date such that a large fraction (e.g., 99%) of the queries will succeed without being re-routed. 1 Introduction Structured peer-to-peer overlays like Chord , CAN , Pastry , and Tapestry provide a substrate for building large-scale distributed applications. These overlays allow applications to locate objects stored in the system in a limited number 
188 routing state  typically O(log N)  because their designers expect that system membership changes frequently. This expectation has been confirmed for successfully deployed systems. A recent study shows that the average session time in Gnutella is only 2.9 hours. This is equivalent to saying that in a system with 100, 000 nodes, there are about 19 membership change events per second. 
188 where n is a large number like 10 5 or 10 6 . We assume dynamic membership behavior as in Gnutella, which is representative of an open Internet environment. From the study of Gnutella and Napster , we deduce that systems of 10 5 and 10 6 nodes would show around 20 and 200 membership changes per second, respectively. We call this rate r. We refer to membership changes as events in the rest of 
188 nodes with 10 slices and 5 units per slice. The results are shown in Figure 7. In the first 300 seconds of the simulation, all nodes join rapidly. After that the system shows Gnutella-like churn with 24 events per minute. All nodes join by obtaining a routing table from another node; the routing tables then continue to grow as new nodes come in. After approximately the first 10 minutes, 
943 routing information sufficiently up-to-date such that a large fraction (e.g., 99%) of the queries will succeed without being re-routed. 1 Introduction Structured peer-to-peer overlays like Chord , CAN , Pastry , and Tapestry provide a substrate for building large-scale distributed applications. These overlays allow applications to locate objects stored in the system in a 
943 item (e.g., providing storage for it) rests with its successor; this is the first node in the identifier ring clockwise from key. This mapping from keys to nodes is based on the one used in Chord , but changing our system to use other mappings is straightforward. Clients issue queries that try to reach the successor node of a particular identifier. We intend our system to satisfy a large 
943 period when it decides that the node is unreachable or dead. A joining node contacts another system node to get its view of the current membership; this protocol is similar to the Chord protocol . The membership information enables it to get in touch with its predecessor and successor, thus informing them of its presence. To maintain correct full routing tables, notifications of membership 
943 period when it decides that the node is unreachable or dead. A joining node contacts another system node to get its view of the current membership; this protocol is similar to the Chord protocol . The membership information enables it to get in touch with its predecessor and successor, thus informing them of its presence. To maintain correct full routing tables, notifications of membership 
943 can argue that our successor and predecessor pointers are correct due to the fact that we essentially follow the same protocol as Chord to maintain these, and this has already been proven correct . 3.3 Scalability Slice leaders have more work to do than other nodes, and this might be a problem for a poorly provisioned node with a low bandwidth connection to the Internet. To overcome this 
2673 are available at URL: http://www.ics.forth.gr/netgroup/msa/ 2 Courcoubetis et al. / Many sources asymptotic and effective bandwidths For example, statistical analysis of traffic measurements has shown a self-similar or fractal behavior; such traffic exhibits long range dependence or slowly decaying autocorrelation. Although the implications of such long range dependence is still an 
2673 3 Available from The Internet Traffic Archive at URL: http://www.acm.org/sigcomm/ITA/ 10 Courcoubetis et al. / Many sources asymptotic and effective bandwidths and D. Wilson . The duration of the trace is 122797.83 seconds. For voice traffic we use an on-off Markov fluid model with peak rate 64 kbps and average time spent in the &quot;on&quot; and &quot;off &quot; states 352 msec and 650 
2679 are available at URL: http://www.ics.forth.gr/netgroup/msa/ 2 Courcoubetis et al. / Many sources asymptotic and effective bandwidths For example, statistical analysis of traffic measurements has shown a self-similar or fractal behavior; such traffic exhibits long range dependence or slowly decaying autocorrelation. Although the implications of such long range dependence is still an 
695 one of the documents), but the actual extraction process should require no manual interference. Documentation in separate documents is often forgotten during maintenance, and self documentation requires less discipline from developers. In other words, it is easier to maintain trace information sources that are part of or close to the program code than maintaining additional documentation 
695 For a developer it is usually easier to add a documentation directly to the design or program code than to remember to update a separate documentation (see the self documentation principle ). Details are -- in contrast to abstractions -- volatile. Because details are going to change, they should not be tangled with abstractions, but put where they will create the least amount of 
802 are motivated by similar goals. Simulation management also serves as a way of documenting the history of computational runs and experiments. For example, in conducting parameterized sweeps , knowing that certain particular choices have been executed elsewhere on the Grid allows flexibility in load balancing and farming out computations to distributed resources. 1.4. GCEs for 
802 only trivial support from this layer. In the parameter definition layer we locate those activities that associate model instances with models. Examples include tools that generate parameter sweeps orothertypesofmodel instance ensembles, as well as the use of problem-oriented scripting languages to generate multiple model instances. (Note that we are using parameter in a very broad sense 
802 how our semistructured representations of models and bindings can aid in even higher level problem-solving facilities. In particular, we concentrate on facilities such as the parameter sweep tool andthe Copyright © 2002 John Wiley & Sons, Ltd. Concurrency Computat.: Pract. Exper. 2002; 14:12411273s<experiment id=diff. prop.> WHERE <environment id=$id> <meta><type>urban</type></meta> 
1190 to accomplish this (Figure 1). User Source 1 Source 2 Source N Mediator Figure 1: The TSIMMIS Architecture Many other data integration systems like Garlic and Information Manifold employ a similar architecture. One of the distinguishing features of TSIMMIS is its use of a semi-structured data model (called the Object Exchange Model or OEM ) for dealing with the 
1190 `Smith'. Notice that the queries to s1 are now feasible because they specify the title values. Other ways to describe source capabilities in mediator systems have been proposed in the literature . For instance, the Information Manifold uses capabilities records for encoding source capabilities. We note that the capability description language used by TSIMMIS is more powerful than the 
695 uses an existing T value. Statically Typed Object-Oriented Languages Statically typed object-oriented languages make use of various forms of record subtyping. SIMULA , C++ , Eiffel and Modula-3 are typical of these languages. Such languages generally refer to a record type as a class, a routine field as a message, and an implementation of a routine field as a method . 
1028 semantic channel. We propose an enhanced type of infomediary to act as personalization server, and describe its architecture and functional modules. Given the increasing popularity of RDF/S (Lassila & Swick 1999; Brickley & Guha 2000) for exporting Portal catalogs on the Web, we rely on robust RDF tools, like RDFSuite 2 , for analyzing, storing and querying resource descriptions and schemas. 
1028 P. However, M has to update periodically its cache using appropriate wrappers for each Portal. Since the term hierarchies and the Web resources of Portals are more and more exported in RDF/S (Lassila & Swick 1999; Brickley & Guha 2000) we employ RSSDB (Alexaki et al. 2001) for storing the cached copies of the catalogs as well as the user-defined semantic channels. Browsing Semantic Channels Clearly we can 
2673 The characteristics of the traffic have a significant impact on the queueing delay. In a ground-breaking work, Willinger et al. reported that network traffic is self-similar rather than Poisson , and much research has been done since to explore the consequences of non-Poisson traffic on queueing delay. The Fractional Brownian Motion (FBM) model has been proposed to capture the coarse time 
2102 MIP assumption. 1960 III. BIT ERROR PERFORMANCE OF 2D-RAKE RECEIVER IN MIMO SYSTEMS For the purpose of illustration, the simple dual transmit diversity space-time block code proposed by Alamouti is adopted in the analysis. Alamouti has shown that the maximum likelihood (ML) estimates of the transmitted data are identical to the ML estimates obtained in a system with a single transmit 
939 that it will be located when needed. Furthermore, these overlay networks tend to be ine#cient, as they mainly use flooding for search. On the other hand, there are structured overlay networks , where a peer joins the overlay network by connecting itself to some other well-defined peers, based on its logical identifier. We say that structured overlay networks are built in a controlled 
939 is used in place of virtual identifier based routing. 2 1.1. Motivations Since the introduction of structured overlay networks, various such systems have been proposed. A partial list includes , and new such systems are probably to come. Unfortunately, existing structured overlay networks are presented in a fragmented way. As a consequence of this, understanding any new such systems 
939 for correcting routing information that each peer maintains. Most of the existing peer-to-peer infrastructures use this technique. For instance, it is used in systems such as Chord , CAN and Pastry . The idea here is that each peer periodically checks its neighbors, to detect any change that occurs in the vicinity of the checking peer. In Chord, this is done by periodically 
939 can be derived. The designer only need to decide which division of the space to use and 24 the rule for selecting responsible peers. Many existing structured peer-to-peer overlay networks, such as , fit the presented framework. Interestingly, from our framework of embedding k-ary trees, we can derive structured overlay networks of constant degree. In this paper, we briefly shown one way to 
943 as false lookup failure, in which the system returns a message saying that an item is not present in the system while the item is actually there. Our simulation-based study of systems such as Chord that use very &quot;weak&quot; join protocol, can have significant number of false lookup failures when compared to our DKS system in which local atomic join protocol is used. The main idea behind local 
943 routines for correcting routing information that each peer maintains. Most of the existing peer-to-peer infrastructures use this technique. For instance, it is used in systems such as Chord , CAN and Pastry . The idea here is that each peer periodically checks its neighbors, to detect any change that occurs in the vicinity of the checking peer. In Chord, this is done by 
173 the number of items reviewed/recommended per member . This kind of distribution is typical of systems where a group of users share information: a minority of the users do a majority of the work . In the context of collaborative document monitoring, this means that the majority can keep up-to-date on many changing web sites by freeriding on the good will of a few people who are willing 
2722 reaches only 10m. The bandwidth is also larger, 11-54Mbps compared to less than 1Mbps for Bluetooth. Additionally, many routing protocols for mobile ad hoc networks based 802.11 already exist . The disadvantage of 802.11 is that it consumes too much energy, and consequently, it drains out the mobile devices batteries in a very short period of time. With the current state of the art, we 
499 heuristic search in general. Introduction During the last decade, powerful search techniques using an implicit state representation based on the reduced ordered binary decision diagram (BDD, Bryant 1986) have been developed in the area of symbolic model checking (McMillan 1993). Using blind exploration strategies these techniques have been successfully applied to verify systems with very large 
499 by a general function for applying Boolean operators. Due to the space limitations of this paper we will treat BDDs as a black-box. Readers interested in a thorough introduction are referred to (Bryant 1986). A search problem is a §?????????¤?? ? ? 4-tuple ??? . is a set of ????????? states. is a transition relation defining the search §?????????????? graph. iff there exists a transition leading ? from 
1102 or in combination with other face animation parameters (FAPs) to control artificial 3D head models. In this paper, we describe the use of active facial appearance models for face analysis . Such image-based parametric models are used to analyse and generate video-realistic faces, and differ from the physical 3D face models frequently used today in machine to man interaction systems. 
1102 examples, can be used for face tracking, facial expression synthesis and recognition. 2. Active facial appearance models 2.1. Model description It has been shown that the active appearance model is a powerful tool for face synthesis and tracking. It uses Principal Component Analysis to model both shape and texture variations seen in a training set of visual objects. For each image of the 
1102 is illustrated by the set of white points). 3. Facial expression analysis and synthesis 3.1. Facial expression modeling The aim of this section is to study a linear model, as it is proposed in , correlating the appearance parameters to facial expression intensity according to: c = ae0 + ae1I + ? (5) where I is a scalar varying from I =0to indicate neutral expression to I =1to indicate a 
939 ) (3) where Nhorizon ?1 represents the cost of querying the item using Gnutella, and CSi,DHT represents the cost of querying the item in the DHT. In a typical DHT system, CSi,DHT is log N messages (with the InvertedCache option). Further, let Ti be the life-time of node i in the system 5 , and let CPi,DHT be the cost of publishing item i into the DHT. Then the total cost per time unit of 
943 ) (3) where Nhorizon ?1 represents the cost of querying the item using Gnutella, and CSi,DHT represents the cost of querying the item in the DHT. In a typical DHT system, CSi,DHT is log N messages (with the InvertedCache option). Further, let Ti be the life-time of node i in the system 5 , and let CPi,DHT be the cost of publishing item i into the DHT. Then the total cost per time unit of 
2249 Information Criterion for Non-Quadratic Regularizers 2 1 Introduction Supervised learning techniques allow to estimate underlying unknown statistical inputoutput relations from given training data . In this process one has to be careful not to overfit the training data, but to estimate the underlying statistical data generation process, such that the learning machine generalizes well, i.e. 
2249 the function class from which the estimators are chosen. Thus, one introduces a preference from complicated models towards simpler models for example by choosing a model with a small VC dimension or by introducing regularization . Intuitively this amounts to selecting a smoother model. In this paper we will consider regularization for enhancing the generalization capability. Here the 
2249 or approximations thereof, e.g. in a worst or average case setting. The former considers the worst generalization error achieved on all possible training sets (see e.g. methods based on VC theory ). The latter considers ensemble averages over all possible training sets, for example the Network Information Criterion (NIC) or the Subspace Information Criterion (SIC) . Furthermore 
2249 test samples are used for measuring the generalization error. The regression function is described as f (x) = 50 # i=1 # i k(x, x i ), (45) where k is the third-order ANOVA decomposition kernel : k(x i , x j ) = # 1#k 1s2s3 #13 #(x ik 1 , x jk 1 )#(x ik 2 , x jk 2 )#(x ik 3 , x jk 3 ) (46) constructed from a linear spline kernel # : #(x i , x j ) = 1 + x i x j + x i x j min(x i , x j ) 
483 2 In environments such as this, for the objectives we seek to address, computation in large-scale sensor networks will require scalable coordination amongst sensors to accomplish the desired tasks , In most circumstances, the sensors must coordinate to achieve one or more global objectives, but yet must do so with only local information. Distributed algorithms to achieve global objectives 
483 for better scalability, since it does not suer from message implosion inherent in the monitoring example just described or in the case of deploying thousands of small sensors in disaster areas . 3.4 Utility Functions and Objective Functions We associate each sensor domain with a monotonically non-decreasing utility function which maps the number of nodes participating in a sensory 
483 algorithms for doing so in the next section. 4 Adaptive, Energy-Ecient Algorithms for Utility Maximization Our algorithm exhibits several desirable properties for routing protocols as proposed by . # Loop-freedom: All routing and communication is performed over a logical spanning tree of the network # Localization: Our algorithm is distributed and message exchanges among nodes are localized 
2722 which we survey here. One aspect of our work leverages o of the considerable body of literature which has focused on improving adaptive routing protocols for communication in ad-hoc networks . In general, these protocols provide improved fault-tolerance and support for mobility, for example by establishing a routing backbone which can be updated dynamically by distributed algorithms 
1102 ¢ are the dimensionalities of the reduced shape space and ¥ the reduced texture space, respectively. Note that a concatenated shape and texture vector has been earlier suggested by Cootes et al . They use a diagonal weight matrix to combine the shape and texture features. Rather than calculating a weight matrix, we implement a simple normalization procedure to commensurate the lower 
1939 of processor enhancements. 3) This paper, by way of illustrating the second contribution, determines the most important machine parameters in the commonly used SimpleScalar superscalar simulator . The remainder of this paper is organized as follows: Section 2 describes the statistical Plackett and Burman design. Sections 3 and 4 describe the experimental setup and the results, respectively, 
1939 values and benchmark programs for simulations, and how it can provide insights into the impact of a processor enhancement. The base simulator, sim-outorder, is from the SimpleScalar tool suite and models a superscalar processor. We modified sim-outorder to include user configurable instruction latencies and throughputs. The benchmarks that were used in this paper, shown in Table 2, were 
1102 quantitatively and qualitatively and show successful real-time face tracking on a number of image sequences containing varying degrees of occlusions. 1 Introduction Active Appearance Models (AAMs) (and the closely related concepts of Active Blobs and Morphable Models ) are generative parametric models commonly used to track faces in video. AAMs are normally constructed by applying 
1102 collection of training images of faces with a mesh of canonical feature points (usually handmarked) on them . AAMs are then fit frame-by-frame to input videos to track the face through the video . The best fit model parameters are then used in whatever the chosen application is. A variety of video applications are possible, including dynamic pose estimation for real-time user interfaces, 
1102 2.1.2 Computing the Shape Variation: si In traditional AAMs the shape vectors si are computed by first aligning every training shape vector s with the base mesh s0 using a similarity transform . The mean shape (i.e. the base mesh s0) is subtracted from each shape vector. Principal Components Analysis is then performed on the aligned shape vectors s. In the case of occlusion only the 
1102 of the face region occluded. Only non-occluded vertices are used in the AAM construction. si are then set to be the orthonormalized eigenvectors with the largest eigenvalues. As is common practice we retain enough shape modes to explain 95% of the observed variation in the training set. 2.2 Appearance As a convenient abuse of terminology, let s0 also denote the pixels x = (x, y) T that lie 
1102 AAMs the appearance vectors Ai are computed by warping all of the input images onto the base mesh using the piecewise affine warps defined between the training shape vector s and the base mesh s0 . Principal Components Analysis is then applied to the resulting images. In the case of occlusion the shape normalized input images are incomplete. If any of the vertices of a triangle are not 
1102 algorithm accurately tracks the face while the project-out algorithm fails. portant to note that we achieve accurate tracking of a face across wide pose changes with a single model. In the same task was achieved using multiple AAMs and a heuristic for switching between them. One major advantage of using only a single model is that the model parameters have the same meaning for 
